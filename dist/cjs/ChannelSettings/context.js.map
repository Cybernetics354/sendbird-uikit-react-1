{"version":3,"file":"context.js","sources":["../../../src/smart-components/ChannelSettings/context/ChannelSettingsProvider.tsx"],"sourcesContent":["\nimport React, {\n  useEffect,\n  useState,\n} from 'react';\nimport type {\n  GroupChannel,\n  GroupChannelUpdateParams,\n  SendbirdGroupChat,\n} from '@sendbird/chat/groupChannel';\n\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { RenderUserProfileProps } from '../../../types';\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport uuidv4 from '../../../utils/uuid';\n\ninterface ApplicationUserListQuery {\n  limit?: number;\n  userIdsFilter?: Array<string>;\n  metaDataKeyFilter?: string;\n  metaDataValuesFilter?: Array<string>;\n}\n\ninterface ChannelSettingsQueries {\n  applicationUserListQuery?: ApplicationUserListQuery;\n}\n\nexport type ChannelSettingsContextProps = {\n  children: React.ReactNode;\n  channelUrl: string;\n  className?: string;\n  onCloseClick?(): void;\n  onChannelModified?(channel: GroupChannel): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): GroupChannelUpdateParams;\n  queries?: ChannelSettingsQueries;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactNode;\n  disableUserProfile?: boolean;\n}\n\ninterface ChannelSettingsProviderInterface {\n  channelUrl: string;\n  onCloseClick?(): void;\n  onChannelModified?(channel: GroupChannel): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): GroupChannelUpdateParams;\n  queries?: ChannelSettingsQueries;\n  setChannelUpdateId(uniqId: string): void;\n  forceUpdateUI(): void;\n  channel: GroupChannel;\n  invalidChannel: boolean;\n}\n\nconst ChannelSettingsContext = React.createContext<ChannelSettingsProviderInterface|null>(undefined);\n\nconst ChannelSettingsProvider: React.FC<ChannelSettingsContextProps> = (props: ChannelSettingsContextProps) => {\n  const {\n    children,\n    className,\n    channelUrl,\n    onCloseClick,\n    onChannelModified,\n    onBeforeUpdateChannel,\n    queries,\n  } = props;\n\n  // fetch store from <SendbirdProvider />\n  const globalStore = useSendbirdStateContext();\n  const { config, stores } = globalStore;\n  const { sdkStore } = stores;\n  const { logger } = config;\n\n  const { initialized } = sdkStore;\n  const sdk = sdkStore?.sdk as SendbirdGroupChat;\n\n  // hack to keep track of channel updates by triggering useEffect\n  const [channelUpdateId, setChannelUpdateId] = useState(uuidv4());\n  const [channel, setChannel] = useState(null);\n  const [invalidChannel, setInvalidChannel] = useState(false);\n\n  const forceUpdateUI = () => {\n    setChannelUpdateId(uuidv4());\n  }\n\n  useEffect(() => {\n    logger.info('ChannelSettings: Setting up');\n    if (!channelUrl || !initialized || !sdk) {\n      logger.warning('ChannelSettings: Setting up failed', 'No channelUrl or sdk uninitialized');\n      setInvalidChannel(false);\n    } else {\n      if (!sdk || !sdk.groupChannel) {\n        logger.warning('ChannelSettings: No GroupChannel');\n        return;\n      }\n      sdk.groupChannel.getChannel(channelUrl).then((groupChannel) => {\n        if (!groupChannel) {\n          logger.warning('ChannelSettings: Channel not found');\n          setInvalidChannel(true);\n        } else {\n          logger.info('ChannelSettings: Fetched group channel', groupChannel);\n          setInvalidChannel(false);\n          setChannel(groupChannel);\n        }\n      });\n    }\n  }, [channelUrl, initialized, channelUpdateId]);\n\n  return (\n    <ChannelSettingsContext.Provider value={{\n      channelUrl,\n      onCloseClick,\n      onChannelModified,\n      onBeforeUpdateChannel,\n      queries,\n      setChannelUpdateId,\n      forceUpdateUI,\n      channel,\n      invalidChannel,\n    }}>\n      <UserProfileProvider\n        renderUserProfile={props?.renderUserProfile}\n        disableUserProfile={props?.disableUserProfile}\n      >\n        <div className={`sendbird-channel-settings ${className}`}>\n          {children}\n        </div>\n      </UserProfileProvider>\n    </ChannelSettingsContext.Provider>\n  );\n}\n\nexport type UseChannelSettingsType = () => ChannelSettingsProviderInterface;\nconst useChannelSettingsContext: UseChannelSettingsType = () => React.useContext(ChannelSettingsContext);\n\nexport {\n  ChannelSettingsProvider,\n  useChannelSettingsContext,\n};\n"],"names":["ChannelSettingsContext","React","createContext","undefined","ChannelSettingsProvider","props","children","className","channelUrl","onCloseClick","onChannelModified","onBeforeUpdateChannel","queries","globalStore","useSendbirdStateContext","config","stores","sdkStore","logger","initialized","sdk","_a","useState","uuidv4","channelUpdateId","setChannelUpdateId","_b","channel","setChannel","_c","invalidChannel","setInvalidChannel","forceUpdateUI","useEffect","info","warning","groupChannel","getChannel","then","UserProfileProvider","renderUserProfile","disableUserProfile","useChannelSettingsContext","useContext"],"mappings":"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"}
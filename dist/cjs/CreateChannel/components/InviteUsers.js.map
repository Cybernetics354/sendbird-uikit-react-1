{"version":3,"file":"InviteUsers.js","sources":["../../../../src/smart-components/CreateChannel/components/InviteUsers/utils.ts","../../../../src/smart-components/CreateChannel/components/InviteUsers/index.tsx"],"sourcesContent":["import type { ApplicationUserListQuery } from \"@sendbird/chat\";\nimport type { GroupChannelCreateParams, SendbirdGroupChat } from \"@sendbird/chat/groupChannel\";\nimport { CHANNEL_TYPE } from \"../../types\";\n\nexport const filterUser = (idsToFilter: string[]) => (currentId: string): boolean => idsToFilter?.includes(currentId);\n\nexport const setChannelType = (\n  params: GroupChannelCreateParams,\n  type: CHANNEL_TYPE,\n): GroupChannelCreateParams => {\n  if (type === 'broadcast') {\n    // eslint-disable-next-line no-param-reassign\n    params.isBroadcast = true;\n  }\n  if (type === 'supergroup') {\n    // eslint-disable-next-line no-param-reassign\n    params.isSuper = true;\n  }\n  return params;\n};\n\ntype CreateDefaultUserListQueryType = {\n  sdk: SendbirdGroupChat;\n  userFilledApplicationUserListQuery?: ApplicationUserListQuery;\n}\n\nexport const createDefaultUserListQuery = (\n  { sdk, userFilledApplicationUserListQuery }: CreateDefaultUserListQueryType\n): ApplicationUserListQuery => {\n  const params = sdk.createApplicationUserListQuery();\n  if (userFilledApplicationUserListQuery) {\n    Object.keys(userFilledApplicationUserListQuery).forEach((key) => {\n      params[key] = userFilledApplicationUserListQuery[key];\n    });\n  }\n  return params;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport type { ApplicationUserListQuery } from '@sendbird/chat';\n\nimport './invite-users.scss';\nimport { LocalizationContext } from '../../../../lib/LocalizationContext';\nimport { useCreateChannelContext } from '../../context/CreateChannelProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport type { GroupChannelCreateParams, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\n\nimport Modal from '../../../../ui/Modal';\nimport Label, {\n  LabelColors,\n  LabelTypography,\n} from '../../../../ui/Label';\nimport { ButtonTypes } from '../../../../ui/Button';\nimport UserListItem from '../../../../ui/UserListItem';\n\nimport {\n  filterUser,\n  setChannelType,\n  createDefaultUserListQuery,\n} from './utils';\n\nexport interface InviteUsersProps {\n  onCancel?: () => void;\n}\n\nconst InviteUsers: React.FC<InviteUsersProps> = ({ onCancel }: InviteUsersProps) => {\n  const {\n    onBeforeCreateChannel,\n    onCreateChannel,\n    createChannel,\n    type,\n  } = useCreateChannelContext();\n\n  const globalStore = useSendbirdStateContext();\n  const userId = globalStore?.config?.userId;\n  const sdk = globalStore?.stores?.sdkStore?.sdk as SendbirdGroupChat;\n  const idsToFilter = [userId];\n  const [users, setUsers] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState({});\n  const { stringSet } = useContext(LocalizationContext);\n  const [usersDataSource, setUsersDataSource] = useState<ApplicationUserListQuery>(null);\n  const selectedCount = Object.keys(selectedUsers).length;\n  const titleText = stringSet.MODAL__CREATE_CHANNEL__TITLE;\n  const submitText = stringSet.BUTTON__CREATE;\n\n  const userQueryCreator = createDefaultUserListQuery({ sdk });\n\n  useEffect(() => {\n    const applicationUserListQuery = userQueryCreator;\n    setUsersDataSource(applicationUserListQuery);\n    applicationUserListQuery.next().then((users_) => {\n      setUsers(users_);\n    });\n  }, []);\n\n  return (\n    <Modal\n      titleText={titleText}\n      submitText={submitText}\n      type={ButtonTypes.PRIMARY}\n      onCancel={onCancel}\n      onSubmit={() => {\n        const selectedUserList = Object.keys(selectedUsers);\n        if (selectedUserList.length > 0) {\n          if (onBeforeCreateChannel) {\n            const params = onBeforeCreateChannel(selectedUserList);\n            setChannelType(params, type);\n            createChannel(params).then((channel) => {\n              onCreateChannel(channel);\n            });\n          } else {\n            const params: GroupChannelCreateParams = {};\n            params.invitedUserIds = selectedUserList;\n            params.isDistinct = false;\n            if (userId) {\n              params.operatorUserIds = [userId];\n            }\n            setChannelType(params, type);\n            // do not have custom params\n            createChannel(params).then((channel) => {\n              onCreateChannel(channel);\n            });\n          }\n          onCancel();\n        }\n      }}\n    >\n      <div>\n        <Label\n          color={(selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3}\n          type={LabelTypography.CAPTION_1}\n        >\n          {`${selectedCount} ${stringSet.MODAL__INVITE_MEMBER__SELECTEC}`}\n        </Label>\n        <div\n          className=\"sendbird-create-channel--scroll\"\n          onScroll={(e) => {\n            const eventTarget = e.target as HTMLDivElement;\n            const { hasNext } = usersDataSource;\n            const fetchMore = (\n              eventTarget.clientHeight + eventTarget.scrollTop === eventTarget.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              usersDataSource.next().then((usersBatch) => {\n                setUsers([\n                  ...users,\n                  ...usersBatch,\n                ]);\n              });\n            }\n          }}\n        >\n          {\n            users.map((user) => (!filterUser(idsToFilter)(user.userId)) && (\n              <UserListItem\n                key={user.userId}\n                user={user}\n                checkBox\n                checked={selectedUsers[user.userId]}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedUsers = {\n                      ...selectedUsers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedUsers[event.target.id];\n                    }\n                    setSelectedUsers(modifiedSelectedUsers);\n                  }\n                }\n              />\n            ))\n          }\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default InviteUsers;\n"],"names":["filterUser","idsToFilter","currentId","includes","setChannelType","params","type","isBroadcast","isSuper","createDefaultUserListQuery","_a","sdk","userFilledApplicationUserListQuery","createApplicationUserListQuery","Object","keys","forEach","key","InviteUsers","onCancel","_e","useCreateChannelContext","onBeforeCreateChannel","onCreateChannel","createChannel","globalStore","useSendbirdStateContext","userId","config","stores","sdkStore","_f","useState","users","setUsers","_g","selectedUsers","setSelectedUsers","stringSet","useContext","LocalizationContext","_h","usersDataSource","setUsersDataSource","selectedCount","length","titleText","MODAL__CREATE_CHANNEL__TITLE","submitText","BUTTON__CREATE","userQueryCreator","useEffect","applicationUserListQuery","next","then","users_","React","Modal","ButtonTypes","PRIMARY","selectedUserList","channel","invitedUserIds","isDistinct","operatorUserIds","Label","LabelColors","ONBACKGROUND_3","LabelTypography","CAPTION_1","MODAL__INVITE_MEMBER__SELECTEC","e","eventTarget","target","hasNext","fetchMore","clientHeight","scrollTop","scrollHeight","usersBatch","map","user","UserListItem","event","modifiedSelectedUsers","id","checked"],"mappings":"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"}
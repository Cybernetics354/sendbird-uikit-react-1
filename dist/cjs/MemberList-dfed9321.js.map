{"version":3,"file":"MemberList-dfed9321.js","sources":["../../src/smart-components/ChannelSettings/components/ModerationPanel/MembersModal.tsx","../../src/smart-components/ChannelSettings/components/ModerationPanel/InviteUsersModal.tsx","../../src/smart-components/ChannelSettings/components/ModerationPanel/MemberList.tsx"],"sourcesContent":["import React, {\n  ReactElement,\n  useEffect,\n  useState,\n} from 'react'\n\nimport Modal from '../../../../ui/Modal';\nimport UserListItem from '../../../../ui/UserListItem';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\nimport { noop } from '../../../../utils/utils';\n\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n}\n\nexport default function MembersModal({ onCancel }: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [memberQuery, setMemberQuery] = useState(null);\n\n  const { channel } = useChannelSettingsContext();\n  const state = useSendbirdStateContext();\n  const currentUser = state?.config?.userId;\n\n  useEffect(() => {\n    const memberListQuery = channel?.createMemberListQuery({\n      limit: 20,\n    });\n    memberListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery);\n  }, [])\n  return (\n    <div>\n      <Modal\n        hideFooter\n        onCancel={() => onCancel()}\n        onSubmit={noop}\n        titleText=\"All Members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = memberQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n\n            if (hasNext && fetchMore) {\n              memberQuery.next().then((o) => {\n                setMembers([\n                  ...members,\n                  ...o,\n                ])\n              });\n            }\n          }}\n        >\n          { members.map((member) => (\n            <UserListItem\n              user={member}\n              key={member.userId}\n              currentUser={currentUser}\n              action={({ parentRef, actionRef }) => (\n                <>\n                  {channel?.myRole === 'operator' && (\n                    <ContextMenu\n                      menuTrigger={(toggleDropdown) => (\n                        <IconButton\n                          className=\"sendbird-user-message__more__menu\"\n                          width=\"32px\"\n                          height=\"32px\"\n                          onClick={toggleDropdown}\n                        >\n                          <Icon\n                            width=\"24px\"\n                            height=\"24px\"\n                            type={IconTypes.MORE}\n                            fillColor={IconColors.CONTENT_INVERSE}\n                          />\n                        </IconButton>\n                      )}\n                      menuItems={(closeDropdown) => (\n                        <MenuItems\n                          parentContainRef={parentRef}\n                          parentRef={actionRef} // for catching location(x, y) of MenuItems\n                          closeDropdown={closeDropdown}\n                          openLeft\n                        >\n                          <MenuItem\n                            onClick={() => {\n                              if ((member.role !== 'operator')) {\n                                channel?.addOperators([member.userId]).then(() => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: 'operator',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              } else {\n                                channel?.removeOperators([member.userId]).then(() => {\n                                  setMembers(members.map(m => {\n                                    if(m.userId === member.userId) {\n                                      return {\n                                        ...member,\n                                        role: '',\n                                      };\n                                    }\n                                    return m;\n                                  }));\n                                  closeDropdown();\n                                });\n                              }\n                            }}\n                          >\n                            { member.role !== 'operator' ? 'Register as operator' : 'Unregister operator'}\n                          </MenuItem>\n                          {\n                            // No muted members in broadcast channel\n                            !channel?.isBroadcast && (\n                              <MenuItem\n                                onClick={() => {\n                                  if (member.isMuted) {\n                                    channel?.unmuteUser(member).then(() => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: false,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    })\n                                  } else {\n                                    channel?.muteUser(member).then(() => {\n                                      setMembers(members.map(m => {\n                                        if(m.userId === member.userId) {\n                                          return {\n                                            ...member,\n                                            isMuted: true,\n                                          };\n                                        }\n                                        return m;\n                                      }));\n                                      closeDropdown();\n                                    });\n                                  }\n                                }}\n                              >\n                                { member.isMuted ? 'Unmute' : 'Mute' }\n                              </MenuItem>\n                            )\n                          }\n                          <MenuItem\n                            onClick={() => {\n                              channel?.banUser(member, -1, '').then(() => {\n                                setMembers(members.filter(({ userId }) => {\n                                  return userId !== member.userId;\n                                }));\n                              });\n                            }}\n                          >\n                            Ban\n                          </MenuItem>\n                        </MenuItems>\n                      )}\n                    />\n                  )}\n                </>\n              )}\n            />\n          ))}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react'\n\nimport Modal from '../../../../ui/Modal';\nimport { Type as ButtonType } from '../../../../ui/Button/type';\nimport UserListItem from '../../../../ui/UserListItem';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\n\ninterface Props {\n  onCancel(): void;\n  onSubmit(members: Array<string>): void;\n}\n\nexport default function InviteUsers({\n  onCancel,\n  onSubmit,\n}: Props): ReactElement {\n  const [members, setMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState({});\n  const [userQuery, setUserQuery] = useState(null);\n\n  const state = useSendbirdStateContext();\n  const sdk = state?.stores?.sdkStore?.sdk;\n\n  const { channel } = useChannelSettingsContext();\n\n  useEffect(() => {\n    const userListQuery = sdk?.createApplicationUserListQuery();\n    userListQuery.next().then((members) => {\n      setMembers(members);\n    });\n    setUserQuery(userListQuery);\n  }, [sdk])\n  return (\n    <div>\n      <Modal\n        disabled={Object.keys(selectedMembers).length === 0}\n        submitText=\"Invite\"\n        type={ButtonType.PRIMARY}\n        onCancel={() => onCancel()}\n        onSubmit={() => {\n          const members = Object.keys(selectedMembers).filter((m) => selectedMembers[m]);\n          channel?.inviteWithUserIds(members).then(() => {\n            onSubmit(members);\n          });\n        }}\n        titleText=\"Select members\"\n      >\n        <div\n          className=\"sendbird-more-members__popup-scroll\"\n          onScroll={(e) => {\n            const { hasNext } = userQuery;\n            const target = e.target as HTMLTextAreaElement;\n            const fetchMore = (\n              target.clientHeight + target.scrollTop === target.scrollHeight\n            );\n            if (hasNext && fetchMore) {\n              userQuery.next().then((users) => {\n                setMembers([\n                  ...members,\n                  ...users,\n                ])\n              });\n            }\n          }}\n        >\n          <div className=\"sendbird-more-members__popup-scroll__inner\">\n            { members.map((member) => (\n              <UserListItem\n                checkBox\n                checked={selectedMembers[member.userId]}\n                onChange={\n                  (event) => {\n                    const modifiedSelectedMembers = {\n                      ...selectedMembers,\n                      [event.target.id]: event.target.checked,\n                    };\n                    if (!event.target.checked) {\n                      delete modifiedSelectedMembers[event.target.id];\n                    }\n                    setSelectedMembers(modifiedSelectedMembers);\n                  }\n                }\n                user={member}\n                key={member.userId}\n              />\n            ))}\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\n\nimport Button, { ButtonTypes, ButtonSizes } from '../../../../ui/Button';\nimport IconButton from '../../../../ui/IconButton';\nimport Icon, { IconTypes, IconColors } from '../../../../ui/Icon';\nimport ContextMenu, { MenuItem, MenuItems } from '../../../../ui/ContextMenu';\n\nimport UserListItem from '../UserListItem';\nimport MembersModal from './MembersModal';\nimport InviteUsers from './InviteUsersModal';\nimport useSendbirdStateContext from '../../../../hooks/useSendbirdStateContext';\nimport { useChannelSettingsContext } from '../../context/ChannelSettingsProvider';\nimport uuidv4 from '../../../../utils/uuid';\n\nexport const MemberList = (): ReactElement => {\n  const [members, setMembers] = useState([]);\n  const [hasNext, setHasNext] = useState(false);\n  const [showAllMembers, setShowAllMembers] = useState(false);\n  const [showInviteUsers, setShowInviteUsers] = useState(false);\n\n  const state = useSendbirdStateContext();\n  const {\n    channel,\n    setChannelUpdateId,\n  } = useChannelSettingsContext();\n\n  const sdk = state?.stores?.sdkStore?.sdk;\n  const userId = state?.config?.userId;\n\n  useEffect(() => {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n\n    const memberUserListQuery = channel?.createMemberListQuery({\n      limit: 10,\n    });\n    memberUserListQuery.next().then((members) => {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel]);\n\n  const refershList = useCallback(\n    () => {\n      if (!channel) {\n        setMembers([]);\n        return;\n      }\n      const memberUserListQuery = channel?.createMemberListQuery({\n        limit: 10,\n      });\n      memberUserListQuery.next().then((members) => {\n        setMembers(members);\n        setHasNext(memberUserListQuery.hasNext);\n        setChannelUpdateId(uuidv4());\n      });\n    },\n    [channel],\n  );\n\n  return (\n    <>\n      {\n        members.map((member) => (\n          <UserListItem\n            key={member.userId}\n            user={member}\n            currentUser={sdk.currentUser.userId}\n            action={\n              (userId !== member.userId)\n                ? ({ actionRef, parentRef }) => (\n                  <ContextMenu\n                    menuTrigger={(toggleDropdown) => (\n                      <IconButton\n                        className=\"sendbird-user-message__more__menu\"\n                        width=\"32px\"\n                        height=\"32px\"\n                        onClick={toggleDropdown}\n                      >\n                        <Icon\n                          width=\"24px\"\n                          height=\"24px\"\n                          type={IconTypes.MORE}\n                          fillColor={IconColors.CONTENT_INVERSE}\n                        />\n                      </IconButton>\n                    )}\n                    menuItems={(closeDropdown) => (\n                      <MenuItems\n                        parentContainRef={parentRef}\n                        parentRef={actionRef} // for catching location(x, y) of MenuItems\n                        closeDropdown={closeDropdown}\n                        openLeft\n                      >\n                        <MenuItem\n                          onClick={() => {\n                            if ((member.role !== 'operator')) {\n                              channel?.addOperators([member.userId]).then(() => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            } else {\n                              channel?.removeOperators([member.userId]).then(() => {\n                                refershList();\n                                closeDropdown();\n                              });\n                            }\n                          }}\n                        >\n                          {member.role !== 'operator' ? 'Register as operator' : 'Unregister operator'}\n                        </MenuItem>\n                        {\n                          // No muted members in broadcast channel\n                          !channel?.isBroadcast && (\n                            <MenuItem\n                              onClick={() => {\n                                if (member.isMuted) {\n                                  channel?.unmuteUser(member).then(() => {\n                                    refershList();\n                                    closeDropdown();\n                                  })\n                                } else {\n                                  channel?.muteUser(member).then(() => {\n                                    refershList();\n                                    closeDropdown();\n                                  });\n                                }\n                              }}\n                            >\n                              { member.isMuted ? 'Unmute' : 'Mute'}\n                            </MenuItem>\n                          )\n                        }\n                        <MenuItem\n                          onClick={() => {\n                            channel?.banUser(member, -1, '').then(() => {\n                              refershList();\n                              closeDropdown();\n                            });\n                          }}\n                        >\n                          Ban\n                    </MenuItem>\n                      </MenuItems>\n                    )}\n                  />\n                )\n                : null\n            }\n          />\n        ))\n      }\n      <div\n        className=\"sendbird-channel-settings-accordion__footer\"\n      >\n        {\n          hasNext && (\n            <Button\n              type={ButtonTypes.SECONDARY}\n              size={ButtonSizes.SMALL}\n              onClick={() => setShowAllMembers(true)}\n            >\n              All members\n            </Button>\n          )\n        }\n        {/* <Button\n          type={ButtonTypes.SECONDARY}\n          size={ButtonSizes.SMALL}\n          onClick={() => setShowInviteUsers(true)}\n        >\n          Invite members\n        </Button> */}\n      </div>\n      {\n        showAllMembers && (\n          <MembersModal\n            onCancel={() => {\n              setShowAllMembers(false);\n              refershList();\n            }}\n          />\n        )\n      }\n      {\n        showInviteUsers && (\n          <InviteUsers\n            onSubmit={() => {\n              setShowInviteUsers(false);\n              refershList();\n            }}\n            onCancel={() => setShowInviteUsers(false)}\n          />\n        )\n      }\n    </>\n  );\n}\n\nexport default MemberList;\n"],"names":["MembersModal","_a","onCancel","_c","useState","members","setMembers","_d","memberQuery","setMemberQuery","channel","useChannelSettingsContext","state","useSendbirdStateContext","currentUser","_b","config","userId","useEffect","memberListQuery","createMemberListQuery","limit","next","then","React","Modal","noop","e","hasNext","target","fetchMore","clientHeight","scrollTop","scrollHeight","o","__spreadArray","map","member","UserListItem","parentRef","actionRef","myRole","ContextMenu","toggleDropdown","IconButton","Icon","IconTypes","MORE","IconColors","CONTENT_INVERSE","closeDropdown","MenuItems","MenuItem","role","addOperators","m","__assign","removeOperators","isBroadcast","isMuted","unmuteUser","muteUser","banUser","filter","InviteUsers","onSubmit","_e","selectedMembers","setSelectedMembers","_f","userQuery","setUserQuery","sdk","stores","sdkStore","userListQuery","createApplicationUserListQuery","Object","keys","length","ButtonType","PRIMARY","inviteWithUserIds","users","event","modifiedSelectedMembers","id","checked","MemberList","setHasNext","showAllMembers","setShowAllMembers","_g","showInviteUsers","setShowInviteUsers","_h","setChannelUpdateId","memberUserListQuery","refershList","useCallback","uuidv4","Button","ButtonTypes","SECONDARY","ButtonSizes","SMALL"],"mappings":"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"}
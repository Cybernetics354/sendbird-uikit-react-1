{"version":3,"file":"context.js","sources":["../../../src/smart-components/OpenChannelSettings/context/OpenChannelSettingsProvider.tsx"],"sourcesContent":["import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport type { OpenChannel, OpenChannelUpdateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\n\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport { RenderUserProfileProps } from '../../../types';\n\nexport interface OpenChannelSettingsContextProps {\n  channelUrl: string;\n  children?: React.ReactNode;\n  onCloseClick?(): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): OpenChannelUpdateParams;\n  onChannelModified?(channel: OpenChannel): void;\n  onDeleteChannel?(channel: OpenChannel): void;\n  disableUserProfile?: boolean;\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactNode;\n}\n\ninterface OpenChannelSettingsContextType {\n  channelUrl: string;\n  channel?: OpenChannel;\n  setChannel?: React.Dispatch<React.SetStateAction<OpenChannel>>;\n  onCloseClick?(): void;\n  onBeforeUpdateChannel?(currentTitle: string, currentImg: File, data: string): OpenChannelUpdateParams;\n  onChannelModified?(channel: OpenChannel): void;\n  onDeleteChannel?(channel: OpenChannel): void;\n}\n\nconst OpenChannelSettingsContext = React.createContext<OpenChannelSettingsContextType | null>(undefined);\n\nconst OpenChannelSettingsProvider: React.FC<OpenChannelSettingsContextProps> = (props: OpenChannelSettingsContextProps) => {\n  const {\n    children,\n    channelUrl,\n    onCloseClick,\n    onChannelModified,\n    onBeforeUpdateChannel,\n    onDeleteChannel,\n  } = props;\n\n  // fetch store from <SendbirdProvider />\n  const globalStore = useSendbirdStateContext();\n  const sdk = globalStore?.stores?.sdkStore?.sdk as SendbirdOpenChat;\n\n  const logger = globalStore?.config?.logger;\n\n  const [channel, setChannel] = useState<OpenChannel | null>(null);\n  useEffect(() => {\n    if (!channelUrl || !sdk.openChannel) {\n      setChannel(null);\n      return;\n    }\n\n    sdk.openChannel.getChannel(channelUrl)\n      .then((channel) => {\n        logger.info('open channel setting: fetched', channel);\n        setChannel(channel);\n      })\n      .catch((error) => {\n        logger.error('open channel setting: error fetching', error);\n        setChannel(null);\n      });\n  }, [channelUrl, sdk]);\n\n  return (\n    <OpenChannelSettingsContext.Provider value={{\n      channelUrl,\n      channel,\n      setChannel,\n      onCloseClick,\n      onChannelModified,\n      onBeforeUpdateChannel,\n      onDeleteChannel,\n    }}>\n      <UserProfileProvider\n        isOpenChannel\n        renderUserProfile={props?.renderUserProfile}\n        disableUserProfile={props?.disableUserProfile}\n      >\n        {children}\n      </UserProfileProvider>\n    </OpenChannelSettingsContext.Provider>\n  );\n}\n\ntype useOpenChannelSettingsType = () => OpenChannelSettingsContextType;\nconst useOpenChannelSettingsContext: useOpenChannelSettingsType = () => React.useContext(OpenChannelSettingsContext);\n\nexport {\n  OpenChannelSettingsProvider,\n  useOpenChannelSettingsContext,\n};\n"],"names":["OpenChannelSettingsContext","React","createContext","undefined","OpenChannelSettingsProvider","props","children","channelUrl","onCloseClick","onChannelModified","onBeforeUpdateChannel","onDeleteChannel","globalStore","useSendbirdStateContext","sdk","stores","sdkStore","logger","config","_d","useState","channel","setChannel","useEffect","openChannel","getChannel","then","info","catch","error","UserProfileProvider","renderUserProfile","disableUserProfile","useOpenChannelSettingsContext","useContext"],"mappings":";;;;;;;;;;;;;;;AA+BA,IAAMA,0BAA0B,gBAAGC,yBAAK,CAACC,aAAN,CAA2DC,SAA3D,CAAnC;;IAEMC,2BAA2B,GAA8C,UAACC,KAAD;;;EAE3E,IAAAC,QAAQ,GAMND,KAAK,SANP;MACAE,UAAU,GAKRF,KAAK,WANP;MAEAG,YAAY,GAIVH,KAAK,aANP;MAGAI,iBAAiB,GAGfJ,KAAK,kBANP;MAIAK,qBAAqB,GAEnBL,KAAK,sBANP;MAKAM,eAAe,GACbN,KAAK,gBANP;;EASF,IAAMO,WAAW,GAAGC,uBAAuB,EAA3C;EACA,IAAMC,GAAG,GAAG,MAAA,MAAAF,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEG,MAAb,UAAA,iBAAA,SAAA,MAAqBC,QAArB,UAAA,iBAAA,SAAA,MAA+BF,GAA3C;EAEA,IAAMG,MAAM,GAAG,MAAAL,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEM,MAAb,UAAA,iBAAA,SAAA,MAAqBD,MAApC;;EAEM,IAAAE,KAAwBC,cAAQ,CAAqB,IAArB,CAAhC;MAACC,OAAO,QAAR;MAAUC,UAAU,QAApB;;EACNC,eAAS,CAAC;IACR,IAAI,CAAChB,UAAD,IAAe,CAACO,GAAG,CAACU,WAAxB,EAAqC;MACnCF,UAAU,CAAC,IAAD,CAAV;MACA;;;IAGFR,GAAG,CAACU,WAAJ,CAAgBC,UAAhB,CAA2BlB,UAA3B,EACGmB,IADH,CACQ,UAACL,OAAD;MACJJ,MAAM,CAACU,IAAP,CAAY,+BAAZ,EAA6CN,OAA7C;MACAC,UAAU,CAACD,OAAD,CAAV;KAHJ,EAKGO,KALH,CAKS,UAACC,KAAD;MACLZ,MAAM,CAACY,KAAP,CAAa,sCAAb,EAAqDA,KAArD;MACAP,UAAU,CAAC,IAAD,CAAV;KAPJ;GANO,EAeN,CAACf,UAAD,EAAaO,GAAb,CAfM,CAAT;EAiBA,oBACEb,wCAAC,0BAAD,CAA4B,QAA5B;IAAqC,KAAK,EAAE;MAC1CM,UAAU,YADgC;MAE1Cc,OAAO,SAFmC;MAG1CC,UAAU,YAHgC;MAI1Cd,YAAY,cAJ8B;MAK1CC,iBAAiB,mBALyB;MAM1CC,qBAAqB,uBANqB;MAO1CC,eAAe;;kBAEfV,wCAAC6B,sCAAD;IACE,aAAa,MADf;IAEE,iBAAiB,EAAEzB,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAE0B,iBAF5B;IAGE,kBAAkB,EAAE1B,KAAK,SAAL,IAAAA,KAAK,WAAL,SAAA,GAAAA,KAAK,CAAE2B;KAE1B1B,QALH,CATF,CADF;AAmBD;;IAGK2B,6BAA6B,GAA+B;EAAM,OAAAhC,yBAAK,CAACiC,UAAN,CAAiBlC,0BAAjB,CAAA;AAA4C;;;;;"}
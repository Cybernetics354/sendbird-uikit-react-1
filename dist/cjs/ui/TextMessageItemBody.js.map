{"version":3,"file":"TextMessageItemBody.js","sources":["../../../src/ui/TextMessageItemBody/index.tsx"],"sourcesContent":["import './index.scss';\nimport React, { ReactElement, useContext, useMemo } from 'react';\nimport type { UserMessage } from '@sendbird/chat/message';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { getClassName, isEditedMessage } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport uuidv4 from '../../utils/uuid';\nimport Word from '../Word';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n  isMentionEnabled?: boolean;\n}\n\nexport default function TextMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n  isMentionEnabled = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const isMessageMentioned = isMentionEnabled && message?.mentionedMessageTemplate?.length > 0 && message?.mentionedUsers?.length > 0;\n  const sentences: Array<Array<string>> = useMemo(() => {\n    return message?.mentionedMessageTemplate?.split(/\\n/).map((sentence) => sentence.split(/\\s/));\n  }, [message?.mentionedMessageTemplate]);\n  return (\n    <Label\n      type={LabelTypography.BODY_1}\n      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n    >\n      <div className={getClassName([\n        className,\n        'sendbird-text-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}>\n        {\n          isMessageMentioned\n           ? (\n              sentences.map((sentence, index) => {\n                return [\n                  sentence.map((word) => {\n                    return (\n                      <Word\n                        key={uuidv4()}\n                        word={word}\n                        message={message}\n                        isByMe={isByMe}\n                      />\n                    );\n                  }),\n                  sentences?.[index + 1] ? <br /> : null,\n                ]\n              })\n           )\n           : message?.message\n        }\n        {\n          isEditedMessage(message) && (\n            <Label\n              className=\"sendbird-text-message-item-body__message edited\"\n              type={LabelTypography.BODY_1}\n              color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n            >\n              {` ${stringSet.MESSAGE_EDITED} `}\n            </Label>\n          )\n        }\n      </div>\n    </Label>\n  );\n}\n"],"names":["TextMessageItemBody","_a","className","message","_e","isByMe","_f","mouseHover","_g","isMentionEnabled","stringSet","useContext","LocalizationContext","isMessageMentioned","_b","mentionedMessageTemplate","length","_c","mentionedUsers","sentences","useMemo","split","map","sentence","React","Label","LabelTypography","BODY_1","LabelColors","ONCONTENT_1","ONBACKGROUND_1","getClassName","reactions","_d","index","word","Word","uuidv4","isEditedMessage","ONCONTENT_2","ONBACKGROUND_2","concat","MESSAGE_EDITED"],"mappings":"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"}
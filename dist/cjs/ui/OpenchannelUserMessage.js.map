{"version":3,"file":"OpenchannelUserMessage.js","sources":["../../../src/ui/OpenchannelUserMessage/index.tsx"],"sourcesContent":["import React, {\n  useMemo,\n  useContext,\n  useRef,\n  useState,\n  ReactElement,\n  useEffect,\n} from 'react';\nimport { UserMessage } from '@sendbird/chat/message';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport { copyToClipboard } from './utils';\nimport uuidv4 from '../../utils/uuid';\nimport {\n  checkIsByMe,\n  checkIsPending,\n  checkIsFailed,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  userId: string;\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: UserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n}\n\nexport default function OpenchannelUserMessage({\n  className,\n  message,\n  userId,\n  resendMessage,\n  disabled,\n  showEdit,\n  showRemove,\n  chainTop,\n}: Props): ReactElement {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  // hooks\n  const { stringSet, dateLocale } = useLocalization();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const [contextStyle, setContextStyle] = useState({});\n\n  // consts\n  const status = message?.sendingStatus;\n  const isByMe = checkIsByMe(message, userId);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  const MemoizedMessageText = useMemo(() => () => {\n    const splitMessage = message.message.split(/\\r/);\n    const matchedMessage = splitMessage.map((word) => (word !== '' ? word : <br />));\n    if (message.updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n          calssName=\"sendbird-openchannel-user-message-word\"\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, message.updatedAt]);\n\n  // place context menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageRef?.current?.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-user-message',\n      ].join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-user-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-user-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                    ? (\n                      renderUserProfile({\n                        user: sender,\n                        close: closeDropdown,\n                      })\n                    )\n                    : (\n                      <UserProfile\n                        user={sender}\n                        onSuccess={closeDropdown}\n                        disableMessaging\n                      />\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-user-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-user-message__right__top\">\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message?.createdAt && (\n                    format(message?.createdAt, 'p', {\n                      locale: dateLocale,\n                    })\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-user-message__right__bottom\">\n          <Label\n            className=\"sendbird-openchannel-user-message__right__bottom__message\"\n            type={LabelTypography.BODY_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {MemoizedMessageText()}\n          </Label>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-user-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-user-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-user-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    fillColor={IconColors.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      {\n        <div\n          className=\"sendbird-openchannel-user-message__context-menu\"\n          ref={contextMenuRef}\n          style={contextStyle}\n        >\n          <ContextMenu\n            menuTrigger={(toggleDropdown) => (\n              showMenuTrigger({ message: message, userId: userId, status: status}) && (\n                <IconButton\n                  className=\"sendbird-openchannel-user-message__context-menu--icon\"\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                  }}\n                >\n                  <Icon\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                    width=\"24px\"\n                    height=\"24px\"\n                  />\n                </IconButton>\n              )\n            )}\n            menuItems={(closeDropdown) => (\n              <MenuItems\n                parentRef={contextMenuRef}\n                parentContainRef={contextMenuRef}\n                closeDropdown={closeDropdown}\n                openLeft\n              >\n                {\n                  isFineCopy({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__copy\"\n                      onClick={() => {\n                        copyToClipboard(message.message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineEdit({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__edit\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showEdit(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineResend({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__resend\"\n                      onClick={() => {\n                        resendMessage(message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineDelete({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__delete\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showRemove(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                    </MenuItem>\n                  )\n                }\n              </MenuItems>\n            )}\n          />\n        </div>\n      }\n    </div>\n  );\n}\n"],"names":["OpenchannelUserMessage","_a","className","message","userId","resendMessage","disabled","showEdit","showRemove","chainTop","messageType","_b","useLocalization","stringSet","dateLocale","_c","useContext","UserProfileContext","disableUserProfile","renderUserProfile","messageRef","useRef","avatarRef","contextMenuRef","_d","useState","contextStyle","setContextStyle","status","sendingStatus","isByMe","checkIsByMe","isPending","checkIsPending","isFailed","checkIsFailed","sender","getSenderFromMessage","MemoizedMessageText","useMemo","splitMessage","split","matchedMessage","map","word","React","updatedAt","push","Label","uuidv4","LabelTypography","BODY_1","LabelColors","ONBACKGROUND_2","concat","MESSAGE_EDITED","useEffect","current","clientHeight","top","window","innerWidth","__spreadArray","Array","isArray","join","ContextMenu","toggleDropdown","Avatar","profileUrl","closeDropdown","MenuItems","paddingTop","paddingBottom","user","close","UserProfile","CAPTION_2","SECONDARY_3","friendName","nickname","CAPTION_3","ONBACKGROUND_3","createdAt","format","locale","ONBACKGROUND_1","Loader","Icon","IconTypes","SPINNER","IconColors","PRIMARY","ERROR","showMenuTrigger","IconButton","MORE","CONTENT_INVERSE","isFineCopy","MenuItem","copyToClipboard","CONTEXT_MENU_DROPDOWN__COPY","isFineEdit","CONTEXT_MENU_DROPDOWN__EDIT","isFineResend","CONTEXT_MENU_DROPDOWN__RESEND","isFineDelete","CONTEXT_MENU_DROPDOWN__DELETE"],"mappings":"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"}
{"version":3,"file":"OpenchannelThumbnailMessage.js","sources":["../../../src/ui/OpenchannelThumbnailMessage/utils.ts","../../../src/ui/OpenchannelThumbnailMessage/index.tsx"],"sourcesContent":["export const SUPPORTING_TYPES = {\n  IMAGE: 'IMAGE',\n  VIDEO: 'VIDEO',\n  UNSUPPORTED: 'UNSUPPORTED',\n};\n\nconst SUPPORTED_MIMES = {\n  IMAGE: [\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'image/webp',\n  ],\n  VIDEO: [\n    'video/mpeg',\n    'video/ogg',\n    'video/webm',\n    'video/mp4',\n  ],\n};\n\nexport const getSupportingFileType = (type: string): string => {\n  if (SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.IMAGE;\n  }\n  if (SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0) {\n    return SUPPORTING_TYPES.VIDEO;\n  }\n  return SUPPORTING_TYPES.UNSUPPORTED;\n}\n","import React, {\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useContext,\n} from 'react';\nimport { FileMessage } from '@sendbird/chat/message';\nimport format from 'date-fns/format';\nimport './index.scss';\nimport { SUPPORTING_TYPES, getSupportingFileType } from './utils';\nimport { useLocalization } from '../../lib/LocalizationContext';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport {\n  checkIsByMe,\n  checkIsSent,\n  checkIsPending,\n  checkIsFailed,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface LocalUrl {\n  localUrl?: string;\n}\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  disabled: boolean;\n  userId: string;\n  chainTop: boolean;\n  chainBottom: boolean;\n  onClick(bool: boolean): void,\n  showRemove(bool: boolean): void,\n  resendMessage(message: FileMessage): void;\n}\n\nexport default function OpenchannelThumbnailMessage({\n  className,\n  message,\n  disabled,\n  userId,\n  chainTop,\n  onClick,\n  showRemove,\n  resendMessage,\n}: Props): JSX.Element {\n  const {\n    type,\n    url,\n    thumbnails,\n    localUrl,\n  }: FileMessage & LocalUrl = message;\n  const status = message?.sendingStatus;\n  const thumbnailUrl = (thumbnails && thumbnails.length > 0 && thumbnails[0].url) || null;\n  const { stringSet, dateLocale } = useLocalization();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const [messageWidth, setMessageWidth] = useState(360);\n  const messageRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const avatarRef = useRef(null);\n\n  const memorizedThumbnailPlaceHolder = useMemo(() => (type) => ({ style }) => ( // eslint-disable-line\n    <div style={style}>\n      <Icon\n        type={type}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"56px\"\n        height=\"56px\"\n        />\n    </div>\n  ), []);\n\n  const isByMe = checkIsByMe(message, userId);\n  const isMessageSent = checkIsSent(status);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  useEffect(() => {\n    const thumbnailWidth = messageRef?.current?.clientWidth - 80;\n    setMessageWidth(thumbnailWidth > 360 ? 360 : thumbnailWidth);\n  }, []);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-thumbnail-message',\n      ].join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-thumbnail-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-thumbnail-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                      ? (\n                        renderUserProfile({\n                          user: sender,\n                          close: closeDropdown,\n                        })\n                      )\n                      : (\n                        <UserProfile\n                          user={sender}\n                          onSuccess={closeDropdown}\n                          disableMessaging\n                        />\n                      )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-thumbnail-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-thumbnail-message__right__title\">\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-thumbnail-message__right__title__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message?.createdAt && (\n                    format(message.createdAt, 'p', {\n                      locale: dateLocale,\n                    })\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-thumbnail-message__right__body\">\n          <div\n            className=\"sendbird-openchannel-thumbnail-message__right__body__wrap\"\n            role=\"button\"\n            onClick={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            onKeyDown={() => {\n              if (isMessageSent) {\n                onClick(true);\n              }\n            }}\n            tabIndex={0}\n          >\n            <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__overlay\" />\n            {\n              {\n                [SUPPORTING_TYPES.VIDEO]: (\n                  (url || localUrl)\n                    ? (\n                      <div className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\" >\n                        {\n                          (thumbnailUrl)\n                            ? (\n                              <ImageRenderer\n                                className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video\"\n                                url={thumbnailUrl}\n                                width={messageWidth}\n                                height=\"270px\"\n                                alt=\"image\"\n                                placeHolder={memorizedThumbnailPlaceHolder(IconTypes.PLAY)}\n                              />\n                            )\n                            : (\n                              <video className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__video\">\n                                <source src={url || localUrl} type={type} />\n                              </video>\n                            )\n                        }\n                        <Icon\n                          className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video__icon\"\n                          type={IconTypes.PLAY}\n                          fillColor={IconColors.ON_BACKGROUND_2}\n                          width=\"56px\"\n                          height=\"56px\"\n                        />\n                      </div>\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__video--icon\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                        width=\"56px\"\n                        height=\"56px\"\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.IMAGE]: (\n                  (url || localUrl)\n                    ? (\n                      <ImageRenderer\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image\"\n                        url={thumbnailUrl || url || localUrl}\n                        alt=\"image\"\n                        width={messageWidth}\n                        height=\"270px\"\n                        placeHolder={memorizedThumbnailPlaceHolder(IconTypes.PHOTO)}\n                      />\n                    )\n                    : (\n                      <Icon\n                        className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__image--icon\"\n                        type={IconTypes.PHOTO}\n                        fillColor={IconColors.ON_BACKGROUND_2}\n                        width=\"56px\"\n                        height=\"56px\"\n                      />\n                    )\n                ),\n                [SUPPORTING_TYPES.UNSUPPORTED]: (\n                  <Icon\n                    className=\"sendbird-openchannel-thumbnail-message__right__body__wrap__unknown\"\n                    type={IconTypes.PHOTO}\n                    fillColor={IconColors.ON_BACKGROUND_2}\n                    width=\"56px\"\n                    height=\"56px\"\n                  />\n                ),\n              }[getSupportingFileType(type)]\n            }\n          </div>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-thumbnail-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-thumbnail-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-thumbnail-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    fillColor={IconColors.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      <div\n        className=\"sendbird-openchannel-thumbnail-message__context-menu\"\n        ref={contextMenuRef}\n      >\n        <ContextMenu\n          menuTrigger={(toggleDropdown) => (\n            showMenuTrigger({ message, userId, status }) && (\n              <IconButton\n                className=\"sendbird-openchannel-thumbnail-message__context-menu--icon\"\n                width=\"32px\"\n                height=\"32px\"\n                onClick={toggleDropdown}\n              >\n                <Icon\n                  type={IconTypes.MORE}\n                  fillColor={IconColors.CONTENT_INVERSE}\n                  width=\"24px\"\n                  height=\"24px\"\n                />\n              </IconButton>\n            )\n          )}\n          menuItems={(closeDropdown) => (\n            <MenuItems\n              parentRef={contextMenuRef}\n              parentContainRef={contextMenuRef}\n              closeDropdown={closeDropdown}\n              openLeft\n            >\n              {\n                isFineResend({ message, userId, status }) && (\n                  <MenuItem\n                    onClick={() => {\n                      resendMessage(message);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                  </MenuItem>\n                )\n              }\n              {\n                isFineDelete({ message, userId, status }) && (\n                  <MenuItem\n                    onClick={() => {\n                      if (disabled) {\n                        return;\n                      }\n                      showRemove(true);\n                      closeDropdown();\n                    }}\n                  >\n                    {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                  </MenuItem>\n                )\n              }\n            </MenuItems>\n          )}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["SUPPORTING_TYPES","IMAGE","VIDEO","UNSUPPORTED","SUPPORTED_MIMES","getSupportingFileType","type","indexOf","OpenchannelThumbnailMessage","_a","className","message","disabled","userId","chainTop","onClick","showRemove","resendMessage","url","thumbnails","localUrl","status","sendingStatus","thumbnailUrl","length","_c","useLocalization","stringSet","dateLocale","_d","useContext","UserProfileContext","disableUserProfile","renderUserProfile","_e","useState","messageWidth","setMessageWidth","messageRef","useRef","contextMenuRef","avatarRef","memorizedThumbnailPlaceHolder","useMemo","style","React","Icon","IconColors","ON_BACKGROUND_2","isByMe","checkIsByMe","isMessageSent","checkIsSent","isPending","checkIsPending","isFailed","checkIsFailed","sender","getSenderFromMessage","useEffect","thumbnailWidth","current","clientWidth","__spreadArray","Array","isArray","join","ContextMenu","toggleDropdown","Avatar","profileUrl","closeDropdown","MenuItems","paddingTop","paddingBottom","user","close","UserProfile","Label","LabelTypography","CAPTION_2","LabelColors","SECONDARY_3","ONBACKGROUND_2","friendName","nickname","CAPTION_3","ONBACKGROUND_3","createdAt","format","locale","_b","ImageRenderer","IconTypes","PLAY","PHOTO","Loader","SPINNER","PRIMARY","ERROR","showMenuTrigger","IconButton","MORE","CONTENT_INVERSE","isFineResend","MenuItem","CONTEXT_MENU_DROPDOWN__RESEND","isFineDelete","CONTEXT_MENU_DROPDOWN__DELETE"],"mappings":"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"}
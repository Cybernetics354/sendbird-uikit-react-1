{"version":3,"file":"ReactionBadge.js","sources":["../../../src/ui/ReactionBadge/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const getClassNameTail = () => {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n    if (isAdd) {\n      return '--is-add';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-badge${getClassNameTail()}`,\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label\n          className={(children && count) && 'sendbird-reaction-badge__inner__count'}\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n"],"names":["ReactionBadge","React","forwardRef","props","ref","className","children","count","selected","isAdd","onClick","getClassNameTail","Array","isArray","join","Label","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_1","propTypes","PropTypes","oneOfType","string","arrayOf","element","isRequired","number","bool","func","defaultProps"],"mappings":";;;;;;;;;;;;AAMMA,MAAAA,aAAa,gBAAGC,yBAAK,CAACC,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;EACrD,MAAM;IACJC,SADI;IAEJC,QAFI;IAGJC,KAHI;IAIJC,QAJI;IAKJC,KALI;AAMJC,IAAAA,OAAAA;AANI,GAAA,GAOFP,KAPJ,CAAA;;EASA,MAAMQ,gBAAgB,GAAG,MAAM;AAC7B,IAAA,IAAIH,QAAQ,IAAI,CAACC,KAAjB,EAAwB;AACtB,MAAA,OAAO,YAAP,CAAA;AACD,KAAA;;AACD,IAAA,IAAIA,KAAJ,EAAW;AACT,MAAA,OAAO,UAAP,CAAA;AACD,KAAA;;AACD,IAAA,OAAO,EAAP,CAAA;GAPF,CAAA;;EAUA,oBACER,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACE,SAAS,EAAE,CACT,IAAIW,KAAK,CAACC,OAAN,CAAcR,SAAd,CAA2BA,GAAAA,SAA3B,GAAuC,CAACA,SAAD,CAA3C,CADS,EAER,CAAA,uBAAA,EAAyBM,gBAAgB,EAAG,EAFpC,CAGTG,CAAAA,IAHS,CAGJ,GAHI,CADb;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,GAAG,EAAEV,GANP;AAOE,IAAA,OAAO,EAAEM,OAPX;AAQE,IAAA,SAAS,EAAEA,OARb;AASE,IAAA,QAAQ,EAAE,CAAA;GAEV,eAAAT,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,gCAAA;GACb,eAAAA,yBAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC,sCAAA;AAAf,GAAA,EACGK,QADH,CADF,eAIEL,yBAAA,CAAA,aAAA,CAACc,cAAD,EAAA;AACE,IAAA,SAAS,EAAGT,QAAQ,IAAIC,KAAb,IAAuB,uCADpC;IAEE,IAAI,EAAES,wBAAe,CAACC,SAFxB;IAGE,KAAK,EAAEC,oBAAW,CAACC,cAAAA;GAElBZ,EAAAA,KALH,CAJF,CAXF,CADF,CAAA;AA0BD,CA9CqB,EAAtB;AAgDAP,aAAa,CAACoB,SAAd,GAA0B;AACxBf,EAAAA,SAAS,EAAEgB,6BAAS,CAACC,SAAV,CAAoB,CAC7BD,6BAAS,CAACE,MADmB,EAE7BF,6BAAS,CAACG,OAAV,CAAkBH,6BAAS,CAACE,MAA5B,CAF6B,CAApB,CADa;AAKxBjB,EAAAA,QAAQ,EAAEe,6BAAS,CAACI,OAAV,CAAkBC,UALJ;AAMxBnB,EAAAA,KAAK,EAAEc,6BAAS,CAACC,SAAV,CAAoB,CACzBD,6BAAS,CAACM,MADe,EAEzBN,6BAAS,CAACE,MAFe,CAApB,CANiB;EAUxBf,QAAQ,EAAEa,6BAAS,CAACO,IAVI;EAWxBnB,KAAK,EAAEY,6BAAS,CAACO,IAXO;EAYxBlB,OAAO,EAAEW,6BAAS,CAACQ,IAAAA;AAZK,CAA1B,CAAA;AAeA7B,aAAa,CAAC8B,YAAd,GAA6B;AAC3BzB,EAAAA,SAAS,EAAE,EADgB;AAE3BE,EAAAA,KAAK,EAAE,EAFoB;AAG3BC,EAAAA,QAAQ,EAAE,KAHiB;AAI3BC,EAAAA,KAAK,EAAE,KAJoB;EAK3BC,OAAO,EAAE,MAAM,EAAG;AALS,CAA7B;;;;"}
{"version":3,"file":"MessageItemMenu.js","sources":["../../../src/ui/MessageItemMenu/index.tsx"],"sourcesContent":["import './index.scss';\nimport React, { ReactElement, useContext, useRef } from 'react';\nimport type { FileMessage, UserMessage } from '@sendbird/chat/message';\nimport type { GroupChannel } from '@sendbird/chat/groupChannel';\nimport type { OpenChannel } from '@sendbird/chat/openChannel';\n\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport {\n  getClassName,\n  copyToClipboard,\n  isUserMessage,\n  isSentMessage,\n  isFailedMessage,\n  isPendingMessage,\n} from '../../utils/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../module';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  isByMe?: boolean;\n  disabled?: boolean;\n  replyType?: ReplyType;\n  showEdit?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemMenu({\n  className,\n  message,\n  channel,\n  isByMe = false,\n  disabled = false,\n  replyType,\n  showEdit,\n  showRemove,\n  resendMessage,\n  setQuoteMessage,\n  setSupposedHover,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(message) && message?.isResendable && isByMe);\n  const showMenuItemDelete: boolean = !isPendingMessage(message) && isByMe;\n  /**\n   * TODO: Manage timing issue\n   * User delete pending message -> Sending message success\n   */\n  const showMenuItemReply: boolean = (replyType === 'QUOTE_REPLY')\n    && !isFailedMessage(message)\n    && !isPendingMessage(message)\n    && (channel?.isGroupChannel() && !(channel as GroupChannel)?.isBroadcast);\n\n  if (!(showMenuItemCopy || showMenuItemReply || showMenuItemEdit || showMenuItemResend || showMenuItemDelete)) {\n    return null;\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-menu__trigger__icon\"\n              type={IconTypes.MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <MenuItems\n              className=\"sendbird-message-item-menu__list\"\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              openLeft={isByMe}\n            >\n              {showMenuItemCopy && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-copy\"\n                  onClick={() => {\n                    copyToClipboard((message as UserMessage)?.message);\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemReply && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-reply\"\n                  onClick={() => {\n                    setQuoteMessage(message);\n                    closeDropdown();\n                  }}\n                  disable={message?.parentMessageId > 0}\n                >\n                  {stringSet.MESSAGE_MENU__REPLY}\n                </MenuItem>\n              )}\n              {showMenuItemEdit && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-edit\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showEdit(true);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__EDIT}\n                </MenuItem>\n              )}\n              {showMenuItemResend && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-resend\"\n                  onClick={() => {\n                    if (!disabled) {\n                      resendMessage(message);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__RESEND}\n                </MenuItem>\n              )}\n              {showMenuItemDelete && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-delete\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showRemove(true);\n                      closeDropdown();\n                    }\n                  }}\n                  disable={message?.threadInfo?.replyCount > 0}\n                >\n                  {stringSet.MESSAGE_MENU__DELETE}\n                </MenuItem>\n              )}\n            </MenuItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n"],"names":["MessageItemMenu","_a","className","message","channel","_b","isByMe","_c","disabled","replyType","showEdit","showRemove","resendMessage","setQuoteMessage","setSupposedHover","stringSet","useContext","LocalizationContext","triggerRef","useRef","containerRef","showMenuItemCopy","isUserMessage","showMenuItemEdit","isSentMessage","showMenuItemResend","isFailedMessage","isResendable","showMenuItemDelete","isPendingMessage","showMenuItemReply","isGroupChannel","isBroadcast","React","getClassName","ContextMenu","toggleDropdown","IconButton","Icon","IconTypes","MORE","IconColors","CONTENT_INVERSE","close","closeDropdown","MenuItems","MenuItem","copyToClipboard","MESSAGE_MENU__COPY","parentMessageId","MESSAGE_MENU__REPLY","MESSAGE_MENU__EDIT","MESSAGE_MENU__RESEND","threadInfo","replyCount","MESSAGE_MENU__DELETE"],"mappings":";;;;;;;;;;;;;;;;;;;;;SAkCwBA,gBAAgBC;MACtCC,SAAS;MACTC,OAAO;MACPC,OAAO;MACPC;MAAAC,MAAM,mBAAG;MACTC;MAAAC,QAAQ,mBAAG;MACXC,SAAS;MACTC,QAAQ;MACRC,UAAU;MACVC,aAAa;MACbC,eAAe;MACfC,gBAAgB;EAER,IAAAC,SAAS,GAAKC,gBAAU,CAACC,uCAAD,CAAV,UAAd;EACR,IAAMC,UAAU,GAAGC,YAAM,CAAC,IAAD,CAAzB;EACA,IAAMC,YAAY,GAAGD,YAAM,CAAC,IAAD,CAA3B;EAEA,IAAME,gBAAgB,GAAYC,mBAAa,CAACnB,OAAD,CAA/C;EACA,IAAMoB,gBAAgB,GAAaD,mBAAa,CAACnB,OAAD,CAAb,IAAyCqB,mBAAa,CAACrB,OAAD,CAAtD,IAAmEG,MAAtG;EACA,IAAMmB,kBAAkB,GAAaC,qBAAe,CAACvB,OAAD,CAAf,KAA4BA,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEwB,YAArC,KAAqDrB,MAA1F;EACA,IAAMsB,kBAAkB,GAAY,CAACC,sBAAgB,CAAC1B,OAAD,CAAjB,IAA8BG,MAAlE;;;;;;EAKA,IAAMwB,iBAAiB,GAAarB,SAAS,KAAK,aAAf,IAC9B,CAACiB,qBAAe,CAACvB,OAAD,CADc,IAE9B,CAAC0B,sBAAgB,CAAC1B,OAAD,CAFa,KAG7BC,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE2B,cAAT,EAAA,KAA6B,EAAE3B,OAAwB,SAAxB,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAmB4B,WAA5B,CAHnC;;EAKA,IAAI,EAAEX,gBAAgB,IAAIS,iBAApB,IAAyCP,gBAAzC,IAA6DE,kBAA7D,IAAmFG,kBAArF,CAAJ,EAA8G;IAC5G,OAAO,IAAP;;;EAEF,oBACEK;IACE,SAAS,EAAEC,kBAAY,CAAC,CAAChC,SAAD,EAAY,4BAAZ,CAAD,CADzB;IAEE,GAAG,EAAEkB;kBAELa,wCAACE,yBAAD;IACE,WAAW,EAAE,UAACC,cAAD;MAA8C,oBACzDH,wCAACI,aAAD;QACE,SAAS,EAAC,qCADZ;QAEE,GAAG,EAAEnB,UAFP;QAGE,KAAK,EAAC,MAHR;QAIE,MAAM,EAAC,MAJT;QAKE,OAAO,EAAE;UACPkB,cAAc;UACdtB,gBAAgB,CAAC,IAAD,CAAhB;SAPJ;QASE,MAAM,EAAE;UACNA,gBAAgB,CAAC,KAAD,CAAhB;;sBAGFmB,wCAACK,kBAAD;QACE,SAAS,EAAC,2CADZ;QAEE,IAAI,EAAEC,iBAAS,CAACC,IAFlB;QAGE,SAAS,EAAEC,kBAAU,CAACC,eAHxB;QAIE,KAAK,EAAC,MAJR;QAKE,MAAM,EAAC;QAlBX,CADyD;KAD7D;IAwBE,SAAS,EAAE,UAACC,KAAD;;;MACT,IAAMC,aAAa,GAAG;QACpBD,KAAK;QACL7B,gBAAgB,CAAC,KAAD,CAAhB;OAFF;;MAIA,oBACEmB,wCAACY,wBAAD;QACE,SAAS,EAAC,kCADZ;QAEE,SAAS,EAAE3B,UAFb;QAGE,gBAAgB,EAAEE,YAHpB;QAIE,aAAa,EAAEwB,aAJjB;QAKE,QAAQ,EAAEtC;SAETe,gBAAgB,iBACfY,wCAACa,uBAAD;QACE,SAAS,EAAC,4DADZ;QAEE,OAAO,EAAE;UACPC,qBAAe,CAAE5C,OAAuB,SAAvB,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAkBA,OAA3B,CAAf;UACAyC,aAAa;;SAGd7B,SAAS,CAACiC,kBAPb,CARJ,EAkBGlB,iBAAiB,iBAChBG,wCAACa,uBAAD;QACE,SAAS,EAAC,6DADZ;QAEE,OAAO,EAAE;UACPjC,eAAe,CAACV,OAAD,CAAf;UACAyC,aAAa;SAJjB;QAME,OAAO,EAAE,CAAAzC,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAE8C,eAAT,IAA2B;SAEnClC,SAAS,CAACmC,mBARb,CAnBJ,EA8BG3B,gBAAgB,iBACfU,wCAACa,uBAAD;QACE,SAAS,EAAC,4DADZ;QAEE,OAAO,EAAE;UACP,IAAI,CAACtC,QAAL,EAAe;YACbE,QAAQ,CAAC,IAAD,CAAR;YACAkC,aAAa;;;SAIhB7B,SAAS,CAACoC,kBATb,CA/BJ,EA2CG1B,kBAAkB,iBACjBQ,wCAACa,uBAAD;QACE,SAAS,EAAC,8DADZ;QAEE,OAAO,EAAE;UACP,IAAI,CAACtC,QAAL,EAAe;YACbI,aAAa,CAACT,OAAD,CAAb;YACAyC,aAAa;;;SAIhB7B,SAAS,CAACqC,oBATb,CA5CJ,EAwDGxB,kBAAkB,iBACjBK,wCAACa,uBAAD;QACE,SAAS,EAAC,8DADZ;QAEE,OAAO,EAAE;UACP,IAAI,CAACtC,QAAL,EAAe;YACbG,UAAU,CAAC,IAAD,CAAV;YACAiC,aAAa;;SALnB;QAQE,OAAO,EAAE,CAAA,MAAAzC,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAEkD,UAAT,UAAA,iBAAA,SAAA,MAAqBC,UAArB,IAAkC;SAE1CvC,SAAS,CAACwC,oBAVb,CAzDJ,CADF;;IAjCN,CADF;AA+GD;;;;"}
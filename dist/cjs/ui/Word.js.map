{"version":3,"file":"Word.js","sources":["../../../src/ui/Word/index.tsx"],"sourcesContent":["import './index.scss';\nimport React from 'react';\nimport type { UserMessage } from '@sendbird/chat/message';\n\nimport { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport uuidv4 from '../../utils/uuid';\nimport { convertWordToStringObj, StringObjType, StringObj } from '../../utils';\nimport MentionLabel from '../MentionLabel';\n\ninterface WordProps {\n  word: string;\n  message: UserMessage;\n  isByMe?: boolean;\n  mentionTemplate?: string;\n  renderString?: (stringObj: StringObj) => JSX.Element;\n}\n\n// Word and StringObj will include types: normal, mention, url\nexport default function Word(props: WordProps): JSX.Element {\n  const {\n    word,\n    message,\n    isByMe = false,\n    mentionTemplate = '@',\n    renderString = null,\n  } = props;\n  return (\n    <span className=\"sendbird-word\">\n      {\n        convertWordToStringObj(word, message?.mentionedUsers).map((stringObj) => {\n          const type = stringObj?.type || '';\n          const value = stringObj?.value || '';\n          const userId = stringObj?.userId || '';\n          if (renderString && typeof renderString === 'function') {\n            return renderString(stringObj);\n          }\n          if (type === StringObjType.mention) {\n            return (\n              <MentionLabel\n                mentionTemplate={mentionTemplate}\n                mentionedUserId={userId}\n                mentionedUserNickname={value}\n                key={uuidv4()}\n                isByMe={isByMe}\n              />\n            );\n          } else if (type === StringObjType.url) {\n            return (\n              <LinkLabel\n                className=\"sendbird-word__url\"\n                key={uuidv4()}\n                src={word}\n                type={LabelTypography.BODY_1}\n                color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n              >\n                {value}\n              </LinkLabel>\n            );\n          } else {\n            return value\n          }\n        })\n      }\n    </span>\n  );\n}\n"],"names":["Word","props","word","message","_a","isByMe","_b","mentionTemplate","_c","renderString","React","convertWordToStringObj","mentionedUsers","map","stringObj","type","value","userId","StringObjType","mention","MentionLabel","uuidv4","url","LinkLabel","LabelTypography","BODY_1","LabelColors","ONCONTENT_1","ONBACKGROUND_1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAmBwBA,KAAKC;EAEzB,IAAAC,IAAI,GAKFD,KAAK,KALP;MACAE,OAAO,GAILF,KAAK,QALP;MAEAG,KAGEH,KAAK,OALP;MAEAI,MAAM,mBAAG,UAFT;MAGAC,KAEEL,KAAK,gBALP;MAGAM,eAAe,mBAAG,QAHlB;MAIAC,KACEP,KAAK,aALP;MAIAQ,YAAY,mBAAG,SAJf;EAMF,oBACEC;IAAM,SAAS,EAAC;KAEZC,4BAAsB,CAACT,IAAD,EAAOC,OAAO,SAAP,IAAAA,OAAO,WAAP,SAAA,GAAAA,OAAO,CAAES,cAAhB,CAAtB,CAAsDC,GAAtD,CAA0D,UAACC,SAAD;IACxD,IAAMC,IAAI,GAAG,CAAAD,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEC,IAAX,KAAmB,EAAhC;IACA,IAAMC,KAAK,GAAG,CAAAF,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEE,KAAX,KAAoB,EAAlC;IACA,IAAMC,MAAM,GAAG,CAAAH,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAEG,MAAX,KAAqB,EAApC;;IACA,IAAIR,YAAY,IAAI,OAAOA,YAAP,KAAwB,UAA5C,EAAwD;MACtD,OAAOA,YAAY,CAACK,SAAD,CAAnB;;;IAEF,IAAIC,IAAI,KAAKG,mBAAa,CAACC,OAA3B,EAAoC;MAClC,oBACET,wCAACU,eAAD;QACE,eAAe,EAAEb,eADnB;QAEE,eAAe,EAAEU,MAFnB;QAGE,qBAAqB,EAAED,KAHzB;QAIE,GAAG,EAAEK,WAAM,EAJb;QAKE,MAAM,EAAEhB;QANZ;KADF,MAUO,IAAIU,IAAI,KAAKG,mBAAa,CAACI,GAA3B,EAAgC;MACrC,oBACEZ,wCAACa,uBAAD;QACE,SAAS,EAAC,oBADZ;QAEE,GAAG,EAAEF,WAAM,EAFb;QAGE,GAAG,EAAEnB,IAHP;QAIE,IAAI,EAAEsB,wBAAe,CAACC,MAJxB;QAKE,KAAK,EAAEpB,MAAM,GAAGqB,oBAAW,CAACC,WAAf,GAA6BD,oBAAW,CAACE;SAErDZ,KAPH,CADF;KADK,MAYA;MACL,OAAOA,KAAP;;GA9BJ,CAFJ,CADF;AAuCD;;;;"}
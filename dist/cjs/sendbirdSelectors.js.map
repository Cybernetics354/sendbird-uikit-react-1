{"version":3,"file":"sendbirdSelectors.js","sources":["../../src/lib/selectors.ts"],"sourcesContent":["import * as topics from './pubSub/topics';\nimport type {\n  User,\n  UserUpdateParams,\n} from '@sendbird/chat';\nimport { FailedMessageHandler, MessageHandler, UserMessage, UserMessageCreateParams } from '@sendbird/chat/message';\nimport { GroupChannel, GroupChannelCreateParams, SendbirdGroupChat } from '@sendbird/chat/groupChannel';\nimport { OpenChannel, OpenChannelCreateParams, SendbirdOpenChat } from '@sendbird/chat/openChannel';\nimport { FileMessage, FileMessageCreateParams, SendableMessage, UserMessageUpdateParams } from '@sendbird/chat/lib/__definition';\n\nimport {\n  SdkStore,\n  SendBirdState,\n  SendBirdStateConfig,\n  SendBirdStateStore,\n} from './types';\nimport { noop } from '../utils/utils';\n\n/**\n * 1. UIKit Instances\n *    a. getSdk\n *    b. getPubSub\n * 2. Chat & Connection\n *    a. getConnect\n *    b. getDisconnect\n *    c. getUpdateUserInfo\n * 3. Channel\n *    a. getCreateGroupChannel\n *    b. getCreateOpenChannel\n *    c. getGetGroupChannel\n *    d. getGetOpenChannel\n *    e. getLeaveGroupChannel\n *    f. getEnterOpenChannel\n *    g. getExitOpenChannel\n *    h. getFreezeChannel\n *    i. getUnfreezeChannel\n * 4. Message\n *    a. getSendUserMessage\n *    b. getSendFileMessage\n *    c. getUpdateUserMessage\n *    d. x - getUpdateFileMessage\n *    e. getDeleteMessage\n *    f. getResendUserMessage\n *    g. getResendFileMessage\n */\n\n/**\n * import useSendbirdStateContext from '@sendbird-uikit/useSendbirdStateContext'\n * import selectors from '@sendbird-uikit/send'\n * const state = useSendbirdStateContext();\n */\n\n// 1. UIKit Instances\n\n/**\n * const sdk = selectors.getSdk(state);\n */\nexport const getSdk = (state: SendBirdState): SendbirdGroupChat & SendbirdOpenChat => {\n  const { stores = {} } = state;\n  const { sdkStore = {} } = stores as SendBirdStateStore;\n  const { sdk } = sdkStore as SdkStore;\n  return sdk;\n};\n\n/**\n * const pubSub = selectors.getPubSub(state);\n */\nexport const getPubSub = (state: SendBirdState): any => {\n  const { config = {} } = state;\n  const { pubSub } = config as SendBirdStateConfig;\n  return pubSub;\n};\n\n// 2. Chat & Connection\n\n/**\n * const connect = selectors.getConnect(state);\n * connect('user-id-sendbirdian', 'access-token-0000')\n *  .then((user) => {})\n *  .catch((error) => {})\n */\nexport const getConnect = (state: SendBirdState) => (\n  (userId: string, accessToken?: string): Promise<User> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk?.connect && typeof sdk.connect === 'function')) {\n        reject(new Error('Not found the function \"connect'));\n      }\n      if (!accessToken) {\n        sdk.connect(userId)\n          .then((res) => resolve(res))\n          .catch((err) => reject(err));\n      } else {\n        sdk.connect(userId, accessToken)\n          .then((res) => resolve(res))\n          .catch((err) => reject(err));\n      }\n    })\n  )\n);\n\n/**\n * const disconnect = selectors.getDisconnect(state);\n * disconnect()\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getDisconnect = (state: SendBirdState) => (\n  (): Promise<void> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk.disconnect && typeof sdk.disconnect === 'function')) {\n        reject(new Error('Not found the function \"disconnect'));\n      }\n      sdk.disconnect()\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    })\n  )\n);\n\n/**\n * const updateUserInfo = selectors.getUpdateUserInfo(state);\n * updateUserInfo('new-nickname', 'new-profile-url')\n *  .then((user) => {})\n *  .catch((error) => {})\n */\nexport const getUpdateUserInfo = (state: SendBirdState) => (\n  (nickname: string, profileUrl?: string): Promise<User> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!(sdk.updateCurrentUserInfo && typeof sdk.updateCurrentUserInfo === 'function')) {\n        reject(new Error('Not found the function \"updateCurrentUserInfo\"'))\n      }\n      const userParams: UserUpdateParams = { nickname };\n      if (profileUrl) {\n        userParams.profileUrl = profileUrl;\n      }\n      sdk.updateCurrentUserInfo(userParams)\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    })\n  )\n);\n\n// 3. Channel\n\n/**\n * const createGroupChannel = selectors.getCreateGroupChannel(state);\n * createGroupChannel(channelParams: GroupChannelCreateParams)\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getCreateGroupChannel = (state: SendBirdState) => (\n  (params: GroupChannelCreateParams): Promise<GroupChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.groupChannel) {\n        reject(new Error('Not found GroupChannelModule'));\n      }\n      if (!(sdk.groupChannel.createChannel && typeof sdk.groupChannel.createChannel === 'function')) {\n        reject(new Error('Not found the function \"createChannel\"'))\n      }\n      sdk.groupChannel.createChannel(params)\n        .then((channel) => {\n          resolve(channel);\n          pubSub.publish(\n            topics.CREATE_CHANNEL,\n            { channel },\n          );\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const createOpenChannel = selectors.getCreateOpenChannel(state);\n * createOpenChannel(channelParams: OpenChannelCreateParams)\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getCreateOpenChannel = (state: SendBirdState) => (\n  (params: OpenChannelCreateParams): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.openChannel) {\n        reject(new Error('Not found OpenChannelModule'));\n      }\n      if (!(sdk.openChannel.createChannel && typeof sdk.openChannel.createChannel === 'function')) {\n        reject(new Error('Not found the function \"createChannel\"'))\n      }\n      sdk.openChannel.createChannel(params)\n        .then((channel) => {\n          resolve(channel);\n          // Consider pubSub process\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const getGroupChannel = selectors.getGetGroupChannel(state);\n * getGroupChannel('channel-url-1234', isSelected)\n *  .then((channel) => {\n *    // groupChannel = channel;\n *    // or\n *    // setCurrentChannel(channel);\n *  })\n *  .catch((error) => {})\n */\nexport const getGetGroupChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<GroupChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.groupChannel) {\n        reject(new Error('Not found GroupChannelModule'));\n      }\n      if (!(sdk.groupChannel.getChannel && typeof sdk.groupChannel.getChannel === 'function')) {\n        reject(new Error('Not found the function \"getChannel\"'))\n      }\n      sdk.groupChannel.getChannel(channelUrl)\n        .then((channel) => {\n          resolve(channel);\n          // Add pubSub with isSelected\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const getOpenChannel = selectors.getGetOpenChannel(state);\n * getOpenChannel('channel-url-12345')\n *  .then((channel) => {\n *    // openChannel = channel;\n *    // or\n *    // setCurrentChannel(channel);\n *  })\n *  .catch((error) => {})\n */\nexport const getGetOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      const sdk = getSdk(state);\n      // const pubSub = getPubSub(state);\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n      if (!sdk.openChannel) {\n        reject(new Error('Not found OpenChannelModule'));\n      }\n      if (!(sdk.openChannel.getChannel && typeof sdk.openChannel.getChannel === 'function')) {\n        reject(new Error('Not found the function \"getChannel\"'))\n      }\n      sdk.openChannel.getChannel(channelUrl)\n        .then((channel) => {\n          resolve(channel);\n          // Add pubSub with isSelected\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const leaveChannel = selectors.getLeaveGroupChannel(state);\n * leaveChannel('group-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getLeaveGroupChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<void> => (\n    new Promise((resolve, reject) => {\n      getGetGroupChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.leave()\n            .then(() => {\n              resolve();\n              // Add pubSub process\n            })\n            .catch(reject)\n        })\n        .catch(reject)\n    })\n  )\n);\n\n/**\n * const enterChannel = selectors.getEnterOpenChannel(state);\n * enterChannel('open-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getEnterOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      getGetOpenChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.enter()\n            .then(() => {\n              resolve(channel);\n              // Add pubSub process\n            })\n            .catch(reject)\n        })\n        .catch(reject)\n    })\n  )\n)\n\n/**\n * const exitChannel = selectors.getExitOpenChannel(state);\n * exitChannel('open-channel-url')\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getExitOpenChannel = (state: SendBirdState) => (\n  (channelUrl: string): Promise<OpenChannel> => (\n    new Promise((resolve, reject) => {\n      getGetOpenChannel(state)?.(channelUrl)\n        .then((channel) => {\n          channel.exit()\n            .then(() => {\n              resolve(channel);\n              // Add pubSub process\n            })\n            .catch(reject)\n        })\n        .catch(reject)\n    })\n  )\n)\n\n/**\n * const freezeChannel = selectors.getFreezeChannel(currentChannel);\n * freezeChannel()\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getFreezeChannel = () => (\n  (channel: GroupChannel | OpenChannel): Promise<void> => (\n    new Promise((resolve, reject) => {\n      if (!(channel.freeze && typeof channel?.freeze === 'function')) {\n        reject(new Error('Not found the function \"freeze\"'));\n      }\n      channel.freeze()\n        .then(() => {\n          resolve();\n          // Add pubSub process\n          /**\n           * consider divide the logic to\n           * _freezeGroupChannel and _freezeOpenChannel\n           */\n        })\n        .catch(reject)\n    })\n  )\n)\n\n/**\n * const unfreezeChannel = selectors.getUnfreezeChannel(currentChannel);\n * unfreezeChannel()\n *  .then((channel) => {})\n *  .catch((error) => {})\n */\nexport const getUnfreezeChannel = () => (\n  (channel: GroupChannel | OpenChannel): Promise<void> => (\n    new Promise((resolve, reject) => {\n      if (!(channel.unfreeze && typeof channel?.unfreeze === 'function')) {\n        reject(new Error('Not found the function \"unfreeze\"'));\n      }\n      channel.unfreeze()\n        .then(() => {\n          resolve();\n          // Add pubSub process\n          /**\n           * consider divide the logic to\n           * _unfreezeGroupChannel and _unfreezeOpenChannel\n           */\n        })\n        .catch(reject)\n    })\n  )\n)\n\n// 4. Message\nexport class UikitMessageHandler {\n  private _onPending: MessageHandler = noop;\n  private _onFailed: FailedMessageHandler = noop;\n  private _onSucceeded: MessageHandler = noop;\n\n  public triggerPending(message: SendableMessage): void {\n    this._onPending(message);\n  }\n  public triggerFailed(error: Error, message: SendableMessage): void {\n    this._onFailed(error, message.isResendable ? message : null);\n  }\n  public triggerSucceeded(message: SendableMessage): void {\n    this._onSucceeded(message);\n  }\n\n  public onPending(handler: MessageHandler): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onPending = handler;\n    }\n    return this;\n  }\n  public onFailed(handler: FailedMessageHandler): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onFailed = handler;\n    }\n    return this;\n  }\n  public onSucceeded(handler: MessageHandler): UikitMessageHandler {\n    if (typeof handler === 'function') {\n      this._onSucceeded = handler;\n    }\n    return this;\n  }\n}\n\n/**\n * const sendUserMessage = selectors.getSendUserMessage(state);\n * sendUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  params: UserMessageCreateParams,\n * )\n *  .onPending((message) => {})\n *  .onFailed((error, message) => {})\n *  .onSucceeded((message) => {})\n */\n\nexport const getSendUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, params: UserMessageCreateParams): UikitMessageHandler => {\n    const handler = new UikitMessageHandler();\n    const pubSub = getPubSub(state);\n    channel.sendUserMessage(params)\n      .onFailed((error, message) => handler.triggerFailed(error, message))\n      .onPending((message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_START,\n          { message, channel },\n        );\n        handler.triggerPending(message);\n      })\n      .onSucceeded((message) => {\n        pubSub.publish(\n          topics.SEND_USER_MESSAGE,\n          { message, channel },\n        );\n        handler.triggerSucceeded(message);\n      });\n    return handler;\n  }\n);\n\n/**\n * const sendFileMessage = selectors.getSendFileMessage(state);\n * sendFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  params: FileMessageCreateParams,\n * )\n *  .onPending((message) => {})\n *  .onFailed((error, message) => {})\n *  .onSucceeded((message) => {})\n */\nexport const getSendFileMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, params: FileMessageCreateParams): UikitMessageHandler => {\n    const handler = new UikitMessageHandler();\n    const pubSub = getPubSub(state);\n    channel.sendFileMessage(params)\n      .onFailed((error, message) => handler.triggerFailed(error, message))\n      .onPending((message) => {\n        pubSub.publish(\n          topics.SEND_MESSAGE_START,\n          { message, channel },\n        );\n        handler.triggerPending(message);\n      })\n      .onSucceeded((message) => {\n        pubSub.publish(\n          topics.SEND_FILE_MESSAGE,\n          { message, channel },\n        );\n        handler.triggerSucceeded(message);\n      });\n    return handler;\n  }\n);\n\n/**\n * const updateUserMessage = selectors.getUpdateUserMessage(state);\n * updateUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  messageId: number,\n *  messageParams: UserMessageUpdateParams,\n * )\n *  .then((message) => {})\n *  .catch((error) => {})\n */\nexport const getUpdateUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, messageId: number, params: UserMessageUpdateParams): Promise<UserMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.updateUserMessage(messageId, params)\n        .then((message) => {\n          pubSub.publish(\n            topics.UPDATE_USER_MESSAGE,\n            { message, channel, fromSelector: true },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n// TODO: We will provie this function in the future\n/**\n * const updateFileMessage = selectors.getUpdateFileMessage(state);\n * updateFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  messageId: number,\n *  params: FileMessageUpdateParams,\n * )\n *  .then((message) => {})\n *  .catch((error) => {})\n */\n// const getUpdateFileMessage = (state: SendBirdState) => (\n//   (channel: GroupChannel | OpenChannel, messageId: number, params: FileMessageUpdateParams) => (\n//     new Promise((resolve, reject) => {\n//       const pubSub = getPubSub(state);\n//       channel.updateFileMessage(messageId, params)\n//         .then((message) => {\n//           pubSub.publish(\n//             topics.UPDATE_USER_MESSAGE,\n//             { message, channel, fromSelector: true },\n//           );\n//           resolve(message);\n//         })\n//         .catch(reject);\n//     })\n//   )\n// );\n\n/**\n * const deleteMessage = selectors.getDeleteMessage(state);\n * deleteMessage(\n *  channel: GroupChannel | OpenChannel,\n *  message: SendableMessage,\n * )\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getDeleteMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, message: SendableMessage): Promise<SendableMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      const { messageId } = message;\n      channel.deleteMessage(message)\n        .then(() => {\n          pubSub.publish(\n            topics.DELETE_MESSAGE,\n            { messageId, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const resendUserMessage = selectors.getResendUserMessage(state);\n * resendUserMessage(\n *  channel: GroupChannel | OpenChannel,\n *  failedMessage: UserMessage,\n * )\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getResendUserMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, failedMessage: UserMessage): Promise<UserMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.resendUserMessage(failedMessage)\n        .then((message) => {\n          pubSub.publish(\n            topics.SEND_USER_MESSAGE,\n            { message, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\n/**\n * const resendFileMessage = selectors.getResendFileMessage(state);\n * resendFileMessage(\n *  channel: GroupChannel | OpenChannel,\n *  failedMessage: FileMessage,\n *  blob: Blob,\n * )\n *  .then(() => {})\n *  .catch((error) => {})\n */\nexport const getResendFileMessage = (state: SendBirdState) => (\n  (channel: GroupChannel | OpenChannel, failedMessage: FileMessage, blob: Blob): Promise<FileMessage> => (\n    new Promise((resolve, reject) => {\n      const pubSub = getPubSub(state);\n      channel.resendFileMessage(failedMessage, blob)\n        .then((message) => {\n          pubSub.publish(\n            topics.SEND_FILE_MESSAGE,\n            { message, channel },\n          );\n          resolve(message);\n        })\n        .catch(reject);\n    })\n  )\n);\n\nconst sendbirdSelectors = {\n  getSdk,\n  getPubSub,\n  getConnect,\n  getDisconnect,\n  getUpdateUserInfo,\n  getCreateGroupChannel,\n  getCreateOpenChannel,\n  getGetGroupChannel,\n  getGetOpenChannel,\n  getLeaveGroupChannel,\n  getEnterOpenChannel,\n  getExitOpenChannel,\n  getFreezeChannel,\n  getUnfreezeChannel,\n  getSendUserMessage,\n  getSendFileMessage,\n  getUpdateUserMessage,\n  getDeleteMessage,\n  getResendUserMessage,\n  getResendFileMessage,\n};\n\nexport default sendbirdSelectors;\n"],"names":["getSdk","state","_a","stores","_b","sdkStore","sdk","getPubSub","config","pubSub","getConnect","userId","accessToken","Promise","resolve","reject","Error","connect","then","res","catch","err","getDisconnect","disconnect","getUpdateUserInfo","nickname","profileUrl","updateCurrentUserInfo","userParams","getCreateGroupChannel","params","groupChannel","createChannel","channel","publish","topics","getCreateOpenChannel","openChannel","getGetGroupChannel","channelUrl","getChannel","getGetOpenChannel","getLeaveGroupChannel","leave","getEnterOpenChannel","enter","getExitOpenChannel","exit","getFreezeChannel","freeze","getUnfreezeChannel","unfreeze","noop","UikitMessageHandler","message","_onPending","error","_onFailed","isResendable","_onSucceeded","handler","getSendUserMessage","sendUserMessage","onFailed","triggerFailed","onPending","triggerPending","onSucceeded","triggerSucceeded","getSendFileMessage","sendFileMessage","getUpdateUserMessage","messageId","updateUserMessage","fromSelector","getDeleteMessage","deleteMessage","getResendUserMessage","failedMessage","resendUserMessage","getResendFileMessage","blob","resendFileMessage","sendbirdSelectors"],"mappings":"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"}
{"version":3,"file":"SortByRow.js","sources":["../../src/ui/SortByRow/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst componentClassName = 'sendbird-sort-by-row';\nexport default function SortByRow({\n  className,\n  maxItemCount,\n  itemWidth,\n  itemHeight,\n  children,\n}) {\n  if (children.length > maxItemCount) {\n    const result = [];\n\n    for (let i = 0; i < children.length; i += maxItemCount) {\n      result.push(\n        <div\n          className={[\n            ...(Array.isArray(className) ? className : [className]),\n            componentClassName,\n          ].join(' ')}\n          key={className + i}\n          style={{\n            width: itemWidth * maxItemCount,\n            height: itemHeight,\n          }}\n        >\n          {\n            children.slice(i, i + maxItemCount)\n          }\n        </div>,\n      );\n    }\n    return result;\n  }\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        componentClassName,\n      ].join(' ')}\n      style={{\n        width: itemWidth * children.length,\n        height: itemHeight,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nSortByRow.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  maxItemCount: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  itemHeight: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n};\n\nSortByRow.defaultProps = {\n  className: '',\n};\n"],"names":["componentClassName","SortByRow","className","maxItemCount","itemWidth","itemHeight","children","length","result","i","push","React","Array","isArray","join","width","height","slice","propTypes","PropTypes","oneOfType","string","arrayOf","number","isRequired","element","defaultProps"],"mappings":";;;AAKA,MAAMA,kBAAkB,GAAG,sBAA3B,CAAA;AACe,SAASC,SAAT,CAMZ,IAAA,EAAA;EAAA,IAN+B;IAChCC,SADgC;IAEhCC,YAFgC;IAGhCC,SAHgC;IAIhCC,UAJgC;AAKhCC,IAAAA,QAAAA;GACC,GAAA,IAAA,CAAA;;AACD,EAAA,IAAIA,QAAQ,CAACC,MAAT,GAAkBJ,YAAtB,EAAoC;IAClC,MAAMK,MAAM,GAAG,EAAf,CAAA;;AAEA,IAAA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACC,MAA7B,EAAqCE,CAAC,IAAIN,YAA1C,EAAwD;MACtDK,MAAM,CAACE,IAAP,eACEC,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;QACE,SAAS,EAAE,CACT,IAAIC,KAAK,CAACC,OAAN,CAAcX,SAAd,CAA2BA,GAAAA,SAA3B,GAAuC,CAACA,SAAD,CAA3C,CADS,EAETF,kBAFS,CAGTc,CAAAA,IAHS,CAGJ,GAHI,CADb;QAKE,GAAG,EAAEZ,SAAS,GAAGO,CALnB;AAME,QAAA,KAAK,EAAE;UACLM,KAAK,EAAEX,SAAS,GAAGD,YADd;AAELa,UAAAA,MAAM,EAAEX,UAAAA;AAFH,SAAA;OAMLC,EAAAA,QAAQ,CAACW,KAAT,CAAeR,CAAf,EAAkBA,CAAC,GAAGN,YAAtB,CAZJ,CADF,CAAA,CAAA;AAiBD,KAAA;;AACD,IAAA,OAAOK,MAAP,CAAA;AACD,GAAA;;EAED,oBACEG,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACE,SAAS,EAAE,CACT,IAAIC,KAAK,CAACC,OAAN,CAAcX,SAAd,CAA2BA,GAAAA,SAA3B,GAAuC,CAACA,SAAD,CAA3C,CADS,EAETF,kBAFS,CAGTc,CAAAA,IAHS,CAGJ,GAHI,CADb;AAKE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEX,SAAS,GAAGE,QAAQ,CAACC,MADvB;AAELS,MAAAA,MAAM,EAAEX,UAAAA;AAFH,KAAA;AALT,GAAA,EAUGC,QAVH,CADF,CAAA;AAcD,CAAA;AAEDL,SAAS,CAACiB,SAAV,GAAsB;AACpBhB,EAAAA,SAAS,EAAEiB,SAAS,CAACC,SAAV,CAAoB,CAC7BD,SAAS,CAACE,MADmB,EAE7BF,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACE,MAA5B,CAF6B,CAApB,CADS;AAKpBlB,EAAAA,YAAY,EAAEgB,SAAS,CAACI,MAAV,CAAiBC,UALX;AAMpBpB,EAAAA,SAAS,EAAEe,SAAS,CAACI,MAAV,CAAiBC,UANR;AAOpBnB,EAAAA,UAAU,EAAEc,SAAS,CAACI,MAAV,CAAiBC,UAPT;AAQpBlB,EAAAA,QAAQ,EAAEa,SAAS,CAACC,SAAV,CAAoB,CAC5BD,SAAS,CAACM,OADkB,EAE5BN,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACM,OAA5B,CAF4B,EAG5BN,SAAS,CAACE,MAHkB,EAI5BF,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACE,MAA5B,CAJ4B,CAApB,CAKPG,CAAAA,UAAAA;AAbiB,CAAtB,CAAA;AAgBAvB,SAAS,CAACyB,YAAV,GAAyB;AACvBxB,EAAAA,SAAS,EAAE,EAAA;AADY,CAAzB;;;;"}
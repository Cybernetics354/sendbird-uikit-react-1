{"version":3,"file":"OpenchannelUserMessage.js","sources":["../../src/ui/OpenchannelUserMessage/index.tsx"],"sourcesContent":["import React, {\n  useMemo,\n  useContext,\n  useRef,\n  useState,\n  ReactElement,\n  useEffect,\n} from 'react';\nimport { UserMessage } from '@sendbird/chat/message';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Loader from '../Loader';\nimport UserProfile from '../UserProfile';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\n\nimport { useLocalization } from '../../lib/LocalizationContext';\nimport { copyToClipboard } from './utils';\nimport uuidv4 from '../../utils/uuid';\nimport {\n  checkIsByMe,\n  checkIsPending,\n  checkIsFailed,\n  isFineCopy,\n  isFineEdit,\n  isFineResend,\n  isFineDelete,\n  showMenuTrigger,\n} from '../../utils/openChannelUtils';\nimport { getSenderFromMessage } from '../../utils/openChannelUtils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  userId: string;\n  disabled?: boolean;\n  showEdit(bool: boolean): void;\n  showRemove(bool: boolean): void;\n  resendMessage(message: UserMessage): void;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n}\n\nexport default function OpenchannelUserMessage({\n  className,\n  message,\n  userId,\n  resendMessage,\n  disabled,\n  showEdit,\n  showRemove,\n  chainTop,\n}: Props): ReactElement {\n  if (!message || message.messageType !== 'user') {\n    return null;\n  }\n\n  // hooks\n  const { stringSet, dateLocale } = useLocalization();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const messageRef = useRef(null);\n  const avatarRef = useRef(null);\n  const contextMenuRef = useRef(null);\n  const [contextStyle, setContextStyle] = useState({});\n\n  // consts\n  const status = message?.sendingStatus;\n  const isByMe = checkIsByMe(message, userId);\n  const isPending = checkIsPending(status);\n  const isFailed = checkIsFailed(status);\n  const sender = getSenderFromMessage(message);\n\n  const MemoizedMessageText = useMemo(() => () => {\n    const splitMessage = message.message.split(/\\r/);\n    const matchedMessage = splitMessage.map((word) => (word !== '' ? word : <br />));\n    if (message.updatedAt > 0) {\n      matchedMessage.push(\n        <Label\n          key={uuidv4()}\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n          calssName=\"sendbird-openchannel-user-message-word\"\n        >\n          {` ${stringSet.MESSAGE_EDITED} `}\n        </Label>,\n      );\n    }\n    return matchedMessage;\n  }, [message, message.updatedAt]);\n\n  // place context menu top depending clientHeight of message component\n  useEffect(() => {\n    if (messageRef?.current?.clientHeight > 36) {\n      setContextStyle({ top: '8px ' });\n    } else {\n      setContextStyle({ top: '2px' });\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-openchannel-user-message',\n      ].join(' ')}\n      ref={messageRef}\n    >\n      <div className=\"sendbird-openchannel-user-message__left\">\n        {\n          !chainTop && (\n            <ContextMenu\n              menuTrigger={(toggleDropdown) => (\n                <Avatar\n                  className=\"sendbird-openchannel-user-message__left__avatar\"\n                  src={sender.profileUrl || ''}\n                  ref={avatarRef}\n                  width=\"28px\"\n                  height=\"28px\"\n                  onClick={() => {\n                    if (!disableUserProfile) {\n                      toggleDropdown();\n                    }\n                  }}\n                />\n              )}\n              menuItems={(closeDropdown) => (\n                <MenuItems\n                  parentRef={avatarRef}\n                  parentContainRef={avatarRef}\n                  closeDropdown={closeDropdown}\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                >\n                  {\n                    renderUserProfile\n                    ? (\n                      renderUserProfile({\n                        user: sender,\n                        close: closeDropdown,\n                      })\n                    )\n                    : (\n                      <UserProfile\n                        user={sender}\n                        onSuccess={closeDropdown}\n                        disableMessaging\n                      />\n                    )\n                  }\n                </MenuItems>\n              )}\n            />\n          )\n        }\n      </div>\n      <div className=\"sendbird-openchannel-user-message__right\">\n        {\n          !chainTop && (\n            <div className=\"sendbird-openchannel-user-message__right__top\">\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sender-name\"\n                type={LabelTypography.CAPTION_2}\n                color={isByMe ? LabelColors.SECONDARY_3 : LabelColors.ONBACKGROUND_2}\n              >\n                {\n                  sender && (\n                    sender.friendName\n                    || sender.nickname\n                    || sender.userId\n                  )\n                }\n              </Label>\n              <Label\n                className=\"sendbird-openchannel-user-message__right__top__sent-at\"\n                type={LabelTypography.CAPTION_3}\n                color={LabelColors.ONBACKGROUND_3}\n              >\n                {\n                  message?.createdAt && (\n                    format(message?.createdAt, 'p', {\n                      locale: dateLocale,\n                    })\n                  )\n                }\n              </Label>\n            </div>\n          )\n        }\n        <div className=\"sendbird-openchannel-user-message__right__bottom\">\n          <Label\n            className=\"sendbird-openchannel-user-message__right__bottom__message\"\n            type={LabelTypography.BODY_1}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {MemoizedMessageText()}\n          </Label>\n        </div>\n        {\n          (isPending || isFailed) && (\n            <div className=\"sendbird-openchannel-user-message__right__tail\">\n              {\n                isPending && (\n                  <Loader\n                    width=\"16px\"\n                    height=\"16px\"\n                  >\n                    <Icon\n                      className=\"sendbird-openchannel-user-message__right__tail__pending\"\n                      type={IconTypes.SPINNER}\n                      fillColor={IconColors.PRIMARY}\n                      width=\"16px\"\n                      height=\"16px\"\n                    />\n                  </Loader>\n                )\n              }\n              {\n                isFailed && (\n                  <Icon\n                    className=\"sendbird-openchannel-user-message__right__tail__failed\"\n                    type={IconTypes.ERROR}\n                    fillColor={IconColors.ERROR}\n                    width=\"16px\"\n                    height=\"16px\"\n                  />\n                )\n              }\n            </div>\n          )\n        }\n      </div>\n      {\n        <div\n          className=\"sendbird-openchannel-user-message__context-menu\"\n          ref={contextMenuRef}\n          style={contextStyle}\n        >\n          <ContextMenu\n            menuTrigger={(toggleDropdown) => (\n              showMenuTrigger({ message: message, userId: userId, status: status}) && (\n                <IconButton\n                  className=\"sendbird-openchannel-user-message__context-menu--icon\"\n                  width=\"32px\"\n                  height=\"32px\"\n                  onClick={() => {\n                    toggleDropdown();\n                  }}\n                >\n                  <Icon\n                    type={IconTypes.MORE}\n                    fillColor={IconColors.CONTENT_INVERSE}\n                    width=\"24px\"\n                    height=\"24px\"\n                  />\n                </IconButton>\n              )\n            )}\n            menuItems={(closeDropdown) => (\n              <MenuItems\n                parentRef={contextMenuRef}\n                parentContainRef={contextMenuRef}\n                closeDropdown={closeDropdown}\n                openLeft\n              >\n                {\n                  isFineCopy({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__copy\"\n                      onClick={() => {\n                        copyToClipboard(message.message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__COPY}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineEdit({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__edit\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showEdit(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__EDIT}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineResend({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__resend\"\n                      onClick={() => {\n                        resendMessage(message);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__RESEND}\n                    </MenuItem>\n                  )\n                }\n                {\n                  isFineDelete({ message: message, userId: userId, status: status }) && (\n                    <MenuItem\n                      className=\"sendbird-openchannel-user-message__context-menu__delete\"\n                      onClick={() => {\n                        if (disabled) {\n                          return;\n                        }\n                        showRemove(true);\n                        closeDropdown();\n                      }}\n                    >\n                      {stringSet.CONTEXT_MENU_DROPDOWN__DELETE}\n                    </MenuItem>\n                  )\n                }\n              </MenuItems>\n            )}\n          />\n        </div>\n      }\n    </div>\n  );\n}\n"],"names":["OpenchannelUserMessage","_a","className","message","userId","resendMessage","disabled","showEdit","showRemove","chainTop","messageType","_b","useLocalization","stringSet","dateLocale","_c","useContext","UserProfileContext","disableUserProfile","renderUserProfile","messageRef","useRef","avatarRef","contextMenuRef","_d","useState","contextStyle","setContextStyle","status","sendingStatus","isByMe","checkIsByMe","isPending","checkIsPending","isFailed","checkIsFailed","sender","getSenderFromMessage","MemoizedMessageText","useMemo","splitMessage","split","matchedMessage","map","word","React","updatedAt","push","uuidv4","LabelTypography","BODY_1","LabelColors","ONBACKGROUND_2","MESSAGE_EDITED","useEffect","current","clientHeight","top","window","innerWidth","__spreadArray","Array","isArray","join","toggleDropdown","profileUrl","closeDropdown","paddingTop","paddingBottom","user","close","UserProfile","CAPTION_2","SECONDARY_3","friendName","nickname","CAPTION_3","ONBACKGROUND_3","createdAt","format","locale","ONBACKGROUND_1","IconTypes","SPINNER","IconColors","PRIMARY","ERROR","showMenuTrigger","MORE","CONTENT_INVERSE","isFineCopy","copyToClipboard","CONTEXT_MENU_DROPDOWN__COPY","isFineEdit","CONTEXT_MENU_DROPDOWN__EDIT","isFineResend","CONTEXT_MENU_DROPDOWN__RESEND","isFineDelete","CONTEXT_MENU_DROPDOWN__DELETE"],"mappings":"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"}
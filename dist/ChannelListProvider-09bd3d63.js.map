{"version":3,"file":"ChannelListProvider-09bd3d63.js","sources":["../src/smart-components/ChannelList/dux/actionTypes.js","../src/smart-components/ChannelList/utils.js","../src/smart-components/ChannelList/dux/initialState.js","../src/smart-components/ChannelList/dux/reducers.js","../src/smart-components/ChannelList/context/ChannelListProvider.tsx"],"sourcesContent":["export const RESET_CHANNEL_LIST = 'RESET_CHANNEL_LIST';\nexport const CREATE_CHANNEL = 'CREATE_CHANNEL';\nexport const UNLOAD_CHANNELS = 'UNLOAD_CHANNELS';\nexport const SET_CHANNEL_LOADING = 'SET_CHANNEL_LOADING';\nexport const LEAVE_CHANNEL_SUCCESS = 'LEAVE_CHANNEL_SUCCESS';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\n\nexport const SHOW_CHANNEL_SETTINGS = 'SHOW_CHANNEL_SETTINGS';\nexport const HIDE_CHANNEL_SETTINGS = 'HIDE_CHANNEL_SETTINGS';\n\nexport const FETCH_CHANNELS_START = 'FETCH_CHANNELS_START';\nexport const FETCH_CHANNELS_SUCCESS = 'FETCH_CHANNELS_SUCCESS';\nexport const FETCH_CHANNELS_FAILURE = 'FETCH_CHANNELS_FAILURE';\n\nexport const INIT_CHANNELS_START = 'INIT_CHANNELS_START';\nexport const INIT_CHANNELS_SUCCESS = 'INIT_CHANNELS_SUCCESS';\nexport const INIT_CHANNELS_FAILURE = 'INIT_CHANNELS_FAILURE';\n\nexport const INVITE_MEMBERS_SUCESS = 'INVITE_MEMBERS_SUCESS';\n\nexport const ON_USER_JOINED = 'ON_USER_JOINED';\nexport const ON_CHANNEL_DELETED = 'ON_CHANNEL_DELETED';\nexport const ON_LAST_MESSAGE_UPDATED = 'ON_LAST_MESSAGE_UPDATED';\nexport const ON_USER_LEFT = 'ON_USER_LEFT';\nexport const ON_CHANNEL_CHANGED = 'ON_CHANNEL_CHANGED';\nexport const ON_CHANNEL_ARCHIVED = 'ON_CHANNEL_ARCHIVED';\nexport const ON_CHANNEL_FROZEN = 'ON_CHANNEL_FROZEN';\nexport const ON_CHANNEL_UNFROZEN = 'ON_CHANNEL_UNFROZEN';\n\nexport const ON_READ_RECEIPT_UPDATED = 'ON_READ_RECEIPT_UPDATED';\nexport const ON_DELIVERY_RECEIPT_UPDATED = 'ON_DELIVERY_RECEIPT_UPDATED';\n\nexport const CHANNEL_REPLACED_TO_TOP = 'CHANNEL_REPLACED_TO_TOP';\nexport const CHANNEL_LIST_PARAMS_UPDATED = 'CHANNEL_LIST_PARAMS_UPDATED';\n","import { GroupChannelHandler } from '@sendbird/chat/groupChannel';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nconst DELIVERY_RECIPT = 'delivery_receipt';\n\nconst createEventHandler = ({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  logger,\n}) => {\n  const ChannelHandler = new GroupChannelHandler({\n    onChannelChanged: (channel) => {\n      logger.info('ChannelList: onChannelChanged', channel);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_CHANGED,\n        payload: channel,\n      });\n    },\n    onChannelDeleted: (channelUrl) => {\n      logger.info('ChannelList: onChannelDeleted', channelUrl);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_DELETED,\n        payload: channelUrl,\n      });\n    },\n    onUserJoined: (channel) => {\n      logger.info('ChannelList: onUserJoined', channel);\n      if (channel?.lastMessage) {\n        channelListDispatcher({\n          type: channelActions.ON_USER_JOINED,\n          payload: channel,\n        });\n      }\n    },\n    onUserBanned: (channel, user) => {\n      const { currentUser } = sdk;\n      logger.info('Channel | useHandleChannelEvents: onUserBanned', channel);\n      if (user.userId === currentUser.userId) {\n        channelListDispatcher({\n          type: channelActions.ON_USER_LEFT,\n          payload: {\n            channel,\n            isMe: true,\n          },\n        });\n      } else {\n        channelListDispatcher({\n          type: channelActions.ON_USER_LEFT,\n          payload: {\n            channel,\n            isMe: false,\n          },\n        });\n      }\n    },\n    onUserLeft: (channel, leftUser) => {\n      const { currentUser } = sdk;\n      const isMe = (currentUser.userId === leftUser.userId);\n      logger.info('ChannelList: onUserLeft', channel);\n      channelListDispatcher({\n        type: channelActions.ON_USER_LEFT,\n        payload: {\n          channel,\n          isMe,\n        },\n      });\n    },\n\n    onReadStatus: (channel) => {\n      logger.info('ChannelList: onReadStatus', channel);\n      channelListDispatcher({\n        type: channelActions.ON_READ_RECEIPT_UPDATED,\n        payload: channel,\n      });\n    },\n\n    onDeliveryReceiptUpdated: (channel) => {\n      logger.info('ChannelList: onDeliveryReceiptUpdated', channel);\n      if (channel?.lastMessage) {\n        channelListDispatcher({\n          type: channelActions.ON_DELIVERY_RECEIPT_UPDATED,\n          payload: channel,\n        });\n      }\n    },\n\n    onMessageUpdated: (channel, message) => {\n      if (channel?.lastMessage.isEqual(message)) {\n        logger.info('ChannelList: onMessageUpdated', channel);\n        channelListDispatcher({\n          type: channelActions.ON_LAST_MESSAGE_UPDATED,\n          payload: channel,\n        });\n      }\n    },\n\n    onChannelHidden: (channel) => {\n      logger.info('ChannelList: onChannelHidden', channel);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_ARCHIVED,\n        payload: channel,\n      });\n    },\n\n    onChannelFrozen: (channel) => {\n      logger.info('ChannelList: onChannelFrozen', channel);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_FROZEN,\n        payload: channel,\n      });\n    },\n\n    onChannelUnfrozen: (channel) => {\n      logger.info('ChannelList: onChannelUnfrozen', channel);\n      channelListDispatcher({\n        type: channelActions.ON_CHANNEL_UNFROZEN,\n        payload: channel,\n      });\n    },\n  });\n\n  logger.info('ChannelList: Added channelHandler');\n  sdk.groupChannel.addGroupChannelHandler(sdkChannelHandlerId, ChannelHandler);\n};\n\nconst createChannelListQuery = ({ sdk, userFilledChannelListQuery = {} }) => {\n  const param = {};\n  param.includeEmpty = false;\n  param.limit = 20; // The value of pagination limit could be set up to 100.\n  param.order = 'latest_last_message'; // 'chronological', 'latest_last_message', 'channel_name_alphabetical', and 'metadata_value_alphabetical'\n\n  if (userFilledChannelListQuery) {\n    Object.keys(userFilledChannelListQuery).forEach((key) => {\n      param[key] = userFilledChannelListQuery[key];\n    });\n  }\n\n  const channelListQuery = sdk.groupChannel.createMyGroupChannelListQuery(param);\n\n  return channelListQuery;\n};\n\n/**\n * Setup event listener\n * create channel source query\n * addloading screen\n */\nfunction setupChannelList({\n  sdk,\n  sdkChannelHandlerId,\n  channelListDispatcher,\n  setChannelSource,\n  onChannelSelect,\n  userFilledChannelListQuery,\n  logger,\n  sortChannelList,\n  disableAutoSelect,\n}) {\n  if (sdk?.groupChannel) {\n    createEventHandler({\n      sdk,\n      channelListDispatcher,\n      sdkChannelHandlerId,\n      logger,\n    });\n  } else {\n    logger.warning('ChannelList - createEventHandler: sdk or sdk.ChannelHandler does not exist', sdk);\n  }\n\n  logger.info('ChannelList - creating query', { userFilledChannelListQuery });\n  const channelListQuery = createChannelListQuery({ sdk, userFilledChannelListQuery });\n  logger.info('ChannelList - created query', channelListQuery);\n  setChannelSource(channelListQuery);\n\n  channelListDispatcher({\n    type: channelActions.INIT_CHANNELS_START,\n  });\n\n  if (userFilledChannelListQuery) {\n    logger.info('ChannelList - setting up channelListQuery', channelListQuery);\n    channelListDispatcher({\n      type: channelActions.CHANNEL_LIST_PARAMS_UPDATED,\n      payload: {\n        channelListQuery,\n        currentUserId: sdk && sdk.currentUser && sdk.currentUser.userId,\n      },\n    });\n  }\n\n  logger.info('ChannelList - fetching channels');\n  if (channelListQuery.hasNext) {\n    channelListQuery.next().then((channelList) => {\n      logger.info('ChannelList - fetched channels', channelList);\n      // select first channel\n      logger.info('ChannelList - highlight channel', channelList[0]);\n      let sortedChannelList = channelList;\n      if (sortChannelList && typeof sortChannelList === 'function') {\n        sortedChannelList = sortChannelList(channelList);\n        logger.info('ChannelList - channel list sorted', sortedChannelList);\n      }\n      if (!disableAutoSelect) {\n        onChannelSelect(sortedChannelList[0]);\n      }\n      channelListDispatcher({\n        type: channelActions.INIT_CHANNELS_SUCCESS,\n        payload: { channelList: sortedChannelList, disableAutoSelect },\n      });\n      const canSetMarkAsDelivered = sdk?.appInfo?.premiumFeatureList\n        ?.find((feature) => (feature === DELIVERY_RECIPT));\n\n      if (canSetMarkAsDelivered) {\n        logger.info('ChannelList: Marking all channels as read');\n        // eslint-disable-next-line no-unused-expressions\n        channelList.forEach((c, idx) => {\n          // Plan-based rate limits - minimum limit is 5 requests per second\n          setTimeout(() => {\n            // eslint-disable-next-line no-unused-expressions\n            c.markAsDelivered();\n          }, 300 * idx);\n        });\n      }\n    }).catch((err) => {\n      if (err) {\n        logger.error('ChannelList - couldnt fetch channels', err);\n        channelListDispatcher({\n          type: channelActions.INIT_CHANNELS_FAILURE,\n        });\n      }\n    });\n  } else {\n    logger.warning('ChannelList - there are no more channels');\n  }\n}\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (pubSub, channelListDispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub) return subscriber;\n  subscriber.set(topics.CREATE_CHANNEL, pubSub.subscribe(topics.CREATE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: 'CREATE_CHANNEL',\n      payload: channel,\n    });\n  }));\n\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    const updatedChannel = channel;\n    if (updatedChannel?.lastMessage?.messageId === message.messageId) {\n      updatedChannel.lastMessage = message;\n    }\n    if (channel) {\n      channelListDispatcher({\n        type: channelActions.ON_LAST_MESSAGE_UPDATED,\n        payload: updatedChannel,\n      });\n    }\n  }));\n\n  subscriber.set(topics.LEAVE_CHANNEL, pubSub.subscribe(topics.LEAVE_CHANNEL, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.LEAVE_CHANNEL_SUCCESS,\n      payload: channel?.url,\n    });\n  }));\n\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel } = msg;\n    channelListDispatcher({\n      type: channelActions.CHANNEL_REPLACED_TO_TOP,\n      payload: channel,\n    });\n  }));\n\n  return subscriber;\n};\n\nexport default setupChannelList;\n","export default {\n  // we might not need this initialized state -> should remove\n  initialized: false,\n  loading: false,\n  allChannels: [],\n  currentChannel: null,\n  showSettings: false,\n  channelListQuery: null,\n  currentUserId: '',\n  disableAutoSelect: false,\n};\n","import { filterChannelListParams, getChannelsWithUpsertedChannel } from '../../../utils';\nimport * as actions from './actionTypes';\nimport initialState from './initialState';\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actions.INIT_CHANNELS_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actions.RESET_CHANNEL_LIST:\n      return initialState;\n    case actions.INIT_CHANNELS_SUCCESS: {\n      const { channelList, disableAutoSelect } = action.payload;\n      return {\n        ...state,\n        initialized: true,\n        loading: false,\n        allChannels: channelList,\n        disableAutoSelect,\n        currentChannel: (\n          !disableAutoSelect\n          && channelList\n          && channelList.length\n          && channelList.length > 0\n        )\n          ? channelList[0]\n          : null,\n      };\n    }\n    case actions.FETCH_CHANNELS_SUCCESS: {\n      const currentChannels = state.allChannels.map((c) => c.url);\n      const filteredChannels = action.payload.filter(\n        ({ url }) => !(currentChannels.find((c) => c === url)),\n      );\n      return {\n        ...state,\n        allChannels: [\n          ...state.allChannels,\n          ...filteredChannels,\n        ],\n      };\n    }\n    case actions.CREATE_CHANNEL: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        return {\n          ...state,\n          currentChannel: channel,\n        };\n      }\n      return {\n        ...state,\n        allChannels: [channel, ...state.allChannels.filter((ch) => ch.url !== channel?.url)],\n        currentChannel: channel,\n      };\n    }\n    case actions.ON_CHANNEL_ARCHIVED: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n          // TODO: Check if we have to set current channel\n        }\n      }\n      const nextChannel = (channel?.url === state.currentChannel?.url)\n        ? state.allChannels[state.allChannels[0].url === channel?.url ? 1 : 0]\n        : state.currentChannel;\n      return {\n        ...state,\n        allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n      };\n    }\n    case actions.LEAVE_CHANNEL_SUCCESS:\n    case actions.ON_CHANNEL_DELETED: {\n      const channelUrl = action.payload;\n      return {\n        ...state,\n        currentChannel: (channelUrl === state.currentChannel?.url)\n          ? state.allChannels[0]\n          : state.currentChannel,\n        allChannels: state.allChannels.filter(({ url }) => url !== channelUrl),\n      };\n    }\n    case actions.ON_USER_LEFT: {\n      const { channel, isMe } = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          const filteredChannels = getChannelsWithUpsertedChannel(state.allChannels, channel);\n          const nextChannel = (isMe && (channel?.url === state.currentChannel?.url))\n            ? filteredChannels[0]\n            : state.currentChannel;\n          return {\n            ...state,\n            currentChannel: state.disableAutoSelect ? null : nextChannel,\n            allChannels: filteredChannels,\n          };\n        }\n        const nextChannel = (channel?.url === state.currentChannel?.url)\n          ? state.allChannels[0]\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n        };\n      }\n      const filteredChannels = state.allChannels.filter((c) => !(c.url === channel?.url && isMe));\n      const nextChannel = (isMe && (channel?.url === state.currentChannel?.url))\n        ? filteredChannels[0]\n        : state.currentChannel;\n      return {\n        ...state,\n        currentChannel: state.disableAutoSelect ? null : nextChannel,\n        allChannels: filteredChannels,\n      };\n    }\n    case actions.ON_USER_JOINED:\n    case actions.ON_CHANNEL_CHANGED:\n    case actions.ON_READ_RECEIPT_UPDATED:\n    case actions.ON_DELIVERY_RECEIPT_UPDATED: {\n      const { allChannels = [] } = state;\n      const channel = action.payload;\n      const { unreadMessageCount } = channel;\n      if (!channel?.lastMessage) return state;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(allChannels, channel),\n          };\n        }\n        const nextChannel = (channel?.url === state.currentChannel?.url)\n          ? state.allChannels[state.allChannels[0].url === channel?.url ? 1 : 0]\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n        };\n      }\n      // if its only an unread message count change, dont push to top\n      if (unreadMessageCount === 0) {\n        const currentChannel = allChannels.find(({ url }) => url === channel?.url);\n        const currentUnreadCount = currentChannel && currentChannel.unreadMessageCount;\n        if (currentUnreadCount === 0) {\n          return {\n            ...state,\n            allChannels: state.allChannels.map((ch) => (ch.url === channel?.url ? channel : ch)),\n          };\n        }\n      }\n      return {\n        ...state,\n        allChannels: [\n          channel,\n          ...state.allChannels.filter(({ url }) => url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload,\n      };\n    case actions.SHOW_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: true,\n      };\n    case actions.HIDE_CHANNEL_SETTINGS:\n      return {\n        ...state,\n        showSettings: false,\n      };\n    case actions.ON_LAST_MESSAGE_UPDATED: {\n      return {\n        ...state,\n        allChannels: state.allChannels.map((channel) => (\n          channel?.url === action.payload.url ? action.payload : channel)),\n      };\n    }\n    case actions.ON_CHANNEL_FROZEN: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        const nextChannel = (channel?.url === state.currentChannel?.url)\n          ? state.allChannels[state.allChannels[0].url === channel?.url ? 1 : 0]\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n        };\n      }\n      return {\n        ...state,\n        allChannels: state.allChannels.map((ch) => {\n          if (ch.url === channel?.url) {\n            // eslint-disable-next-line no-param-reassign\n            ch.isFrozen = true;\n            return ch;\n          }\n          return ch;\n        }),\n      };\n    }\n    case actions.ON_CHANNEL_UNFROZEN: {\n      const channel = action.payload;\n      if (state.channelListQuery) {\n        if (filterChannelListParams(state.channelListQuery, channel, state.currentUserId)) {\n          return {\n            ...state,\n            allChannels: getChannelsWithUpsertedChannel(state.allChannels, channel),\n          };\n        }\n        const nextChannel = (channel?.url === state.currentChannel?.url)\n          ? state.allChannels[state.allChannels[0].url === channel?.url ? 1 : 0]\n          // if coming channel is first of channel list, current channel will be the next one\n          : state.currentChannel;\n        return {\n          ...state,\n          allChannels: state.allChannels.filter(({ url }) => url !== channel?.url),\n          currentChannel: state.disableAutoSelect ? null : nextChannel,\n        };\n      }\n      return {\n        ...state,\n        allChannels: state.allChannels.map((ch) => {\n          if (ch.url === channel?.url) {\n            // eslint-disable-next-line no-param-reassign\n            ch.isFrozen = false;\n            return ch;\n          }\n          return ch;\n        }),\n      };\n    }\n    case actions.CHANNEL_REPLACED_TO_TOP: {\n      return {\n        ...state,\n        allChannels: [\n          action.payload,\n          ...state.allChannels.filter((channel) => channel?.url !== action.payload.url),\n        ],\n      };\n    }\n    case actions.CHANNEL_LIST_PARAMS_UPDATED:\n      return {\n        ...state,\n        currentUserId: action.payload.currentUserId,\n        channelListQuery: action.payload.channelListQuery,\n      };\n    default:\n      return state;\n  }\n}\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  useReducer,\n  useMemo,\n} from 'react';\n\nimport type { User } from '@sendbird/chat';\nimport {\n  GroupChannel,\n  GroupChannelCreateParams,\n  GroupChannelHandler,\n  SendbirdGroupChat,\n  GroupChannelListQuery as GroupChannelListQuerySb\n} from '@sendbird/chat/groupChannel';\n\nimport { RenderUserProfileProps } from '../../../types';\n\nimport setupChannelList, {\n  pubSubHandler,\n  pubSubHandleRemover,\n} from '../utils';\nimport { uuidv4 } from '../../../utils/uuid';\nimport { noop } from '../../../utils/utils';\n\nimport * as channelListActions from '../dux/actionTypes';\n\nimport { UserProfileProvider } from '../../../lib/UserProfileContext';\nimport useSendbirdStateContext from '../../../hooks/useSendbirdStateContext';\nimport { CustomUseReducerDispatcher } from '../../../lib/SendbirdState';\nimport channelListReducers from '../dux/reducers';\nimport channelListInitialState from '../dux/initialState';\n\ninterface ApplicationUserListQuery {\n  limit?: number;\n  userIdsFilter?: Array<string>;\n  metaDataKeyFilter?: string;\n  metaDataValuesFilter?: Array<string>;\n}\n\ninterface GroupChannelListQuery {\n  limit?: number;\n  includeEmpty?: boolean;\n  order?: 'latest_last_message' | 'chronological' | 'channel_name_alphabetical' | 'metadata_value_alphabetical';\n  userIdsExactFilter?: Array<string>;\n  userIdsIncludeFilter?: Array<string>;\n  userIdsIncludeFilterQueryType?: 'AND' | 'OR';\n  nicknameContainsFilter?: string;\n  channelNameContainsFilter?: string;\n  customTypesFilter?: Array<string>;\n  customTypeStartsWithFilter?: string;\n  channelUrlsFilter?: Array<string>;\n  superChannelFilter?: 'all' | 'super' | 'nonsuper';\n  publicChannelFilter?: 'all' | 'public' | 'private';\n  metadataOrderKeyFilter?: string;\n  memberStateFilter?: 'all' | 'joined_only' | 'invited_only' | 'invited_by_friend' | 'invited_by_non_friend';\n  hiddenChannelFilter?: 'unhidden_only' | 'hidden_only' | 'hidden_allow_auto_unhide' | 'hidden_prevent_auto_unhide';\n  unreadChannelFilter?: 'all' | 'unread_message';\n  includeFrozen?: boolean;\n}\n\ninterface ChannelListQueries {\n  applicationUserListQuery?: ApplicationUserListQuery;\n  channelListQuery?: GroupChannelListQuery;\n}\n\nexport interface ChannelListProviderProps {\n  allowProfileEdit?: boolean;\n  onBeforeCreateChannel?(users: Array<string>): GroupChannelCreateParams;\n  onThemeChange?(theme: string): void;\n  onProfileEditSuccess?(user: User): void;\n  onChannelSelect?(channel: GroupChannel): void;\n  sortChannelList?: (channels: GroupChannel[]) => GroupChannel[];\n  queries?: ChannelListQueries;\n  children?: React.ReactNode;\n  className?: string | string[];\n  renderUserProfile?: (props: RenderUserProfileProps) => React.ReactNode;\n  disableUserProfile?: boolean;\n  disableAutoSelect?: boolean;\n  typingChannels?: Array<GroupChannel>;\n  isTypingIndicatorEnabled?: boolean;\n  isMessageReceiptStatusEnabled?: boolean;\n}\n\nexport interface ChannelListProviderInterface extends ChannelListProviderProps {\n  initialized: boolean;\n  loading: boolean;\n  allChannels: GroupChannel[];\n  currentChannel: GroupChannel;\n  showSettings: boolean;\n  channelListQuery: GroupChannelListQuery;\n  currentUserId: string;\n  channelListDispatcher: CustomUseReducerDispatcher;\n  channelSource: GroupChannelListQuerySb;\n}\n\ninterface ChannelListStoreInterface {\n  initialized: boolean;\n  loading: boolean;\n  allChannels: GroupChannel[];\n  currentChannel: GroupChannel;\n  showSettings: boolean;\n  channelListQuery: GroupChannelListQuery;\n  currentUserId: string;\n  disableAutoSelect: boolean;\n}\n\nconst ChannelListContext = React.createContext<ChannelListProviderInterface | null>({\n  disableUserProfile: true,\n  allowProfileEdit: true,\n  onBeforeCreateChannel: null,\n  onThemeChange: null,\n  onProfileEditSuccess: null,\n  onChannelSelect: null,\n  queries: {},\n  className: null,\n  initialized: false,\n  loading: false,\n  allChannels: [],\n  currentChannel: null,\n  showSettings: false,\n  channelListQuery: {},\n  currentUserId: null,\n  channelListDispatcher: null,\n  channelSource: null,\n  typingChannels: [],\n});\n\nconst ChannelListProvider: React.FC<ChannelListProviderProps> = (props: ChannelListProviderProps) => {\n  // destruct props\n  const {\n    children,\n    className,\n    disableUserProfile,\n    allowProfileEdit,\n    queries,\n    onProfileEditSuccess,\n    onThemeChange,\n    onBeforeCreateChannel,\n    sortChannelList,\n    disableAutoSelect,\n    isTypingIndicatorEnabled = null,\n    isMessageReceiptStatusEnabled = null,\n  } = props;\n  const onChannelSelect = props?.onChannelSelect || noop;\n  // fetch store from <SendbirdProvider />\n  const globalStore = useSendbirdStateContext();\n  const { config, stores } = globalStore;\n  const { sdkStore } = stores;\n  const { pubSub, logger } = config;\n  const {\n    isTypingIndicatorEnabledOnChannelList,\n    isMessageReceiptStatusEnabledOnChannelList,\n  } = config;\n  const sdk = sdkStore?.sdk as SendbirdGroupChat;\n\n  // derive some variables\n  // enable if it is true atleast once(both are flase by default)\n  const userDefinedDisableUserProfile = disableUserProfile || config?.disableUserProfile;\n  const userDefinedRenderProfile = config?.renderUserProfile;\n  const enableEditProfile = allowProfileEdit || config?.allowProfileEdit;\n\n  const userFilledChannelListQuery = queries?.channelListQuery;\n  const userFilledApplicationUserListQuery = queries?.applicationUserListQuery;\n\n  const sdkIntialized = sdkStore?.initialized;\n\n  const [channelListStore, channelListDispatcher] = useReducer(\n    channelListReducers,\n    channelListInitialState,\n  ) as [ChannelListStoreInterface, CustomUseReducerDispatcher];\n  const { loading, currentChannel } = channelListStore;\n\n  const [channelSource, setChannelSource] = useState<GroupChannelListQuerySb>();\n  const [sdkChannelHandlerId, setSdkChannelHandlerId] = useState<string | null>(null);\n  const [typingHandlerId, setTypingHandlerId] = useState<string | null>(null);\n  const [typingChannels, setTypingChannels] = useState<Array<GroupChannel>>([]);\n\n  useEffect(() => {\n    const subscriber = pubSubHandler(pubSub, channelListDispatcher);\n    return () => {\n      pubSubHandleRemover(subscriber);\n    };\n  }, [sdkIntialized]);\n\n  useEffect(() => {\n    setSdkChannelHandlerId(uuidv4);\n    if (sdkIntialized) {\n      logger.info('ChannelList: Setup channelHandlers');\n      setupChannelList({\n        sdk,\n        sdkChannelHandlerId,\n        channelListDispatcher,\n        setChannelSource,\n        onChannelSelect,\n        userFilledChannelListQuery,\n        logger,\n        sortChannelList,\n        disableAutoSelect,\n      });\n    } else {\n      logger.info('ChannelList: Removing channelHandlers');\n      // remove previous channelHandlers\n      if (sdk?.groupChannel?.removeGroupChannelHandler) {\n        sdk.groupChannel.removeGroupChannelHandler(sdkChannelHandlerId);\n      }\n      // remove channelSource\n      setChannelSource(null);\n      // cleanup\n      channelListDispatcher({\n        type: channelListActions.RESET_CHANNEL_LIST,\n        payload: null,\n      });\n    }\n    return () => {\n      logger.info('ChannelList: Removing channelHandlers');\n      if (sdk?.groupChannel?.removeGroupChannelHandler) {\n        sdk?.groupChannel?.removeGroupChannelHandler(sdkChannelHandlerId);\n      }\n    };\n  }, [sdkIntialized, userFilledChannelListQuery, sortChannelList]);\n\n  useEffect(() => {\n    if (sdk?.groupChannel?.addGroupChannelHandler) {\n      const handlerId = uuidv4()\n      const handler = new GroupChannelHandler({\n        onTypingStatusUpdated: (channel) => {\n          const typingMemberCount = channel?.getTypingUsers()?.length\n          const channelList = typingChannels.filter(ch => ch.url !== channel.url)\n          if (typingMemberCount > 0) {\n            setTypingChannels([...channelList, channel])\n          } else {\n            setTypingChannels(channelList)\n          }\n        },\n        onUnreadMemberStatusUpdated(channel) {\n          channelListDispatcher({\n            type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n            payload: channel,\n          });\n        },\n        onUndeliveredMemberStatusUpdated(channel) {\n          channelListDispatcher({\n            type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n            payload: channel,\n          });\n        },\n        onMessageUpdated(channel) {\n          channelListDispatcher({\n            type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n            payload: channel,\n          });\n          sdk.groupChannel.getChannelWithoutCache(channel.url)\n            .then((ch) => {\n              channelListDispatcher({\n                type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n                payload: ch,\n              });\n            });\n        },\n        onMentionReceived(channel) {\n          channelListDispatcher({\n            type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n            payload: channel,\n          });\n          sdk.groupChannel.getChannelWithoutCache(channel.url)\n            .then((ch) => {\n              channelListDispatcher({\n                type: channelListActions.ON_LAST_MESSAGE_UPDATED,\n                payload: ch,\n              });\n            });\n        },\n      });\n      sdk?.groupChannel?.addGroupChannelHandler(handlerId, handler)\n      setTypingHandlerId(handlerId)\n    }\n    return () => {\n      if (sdk?.groupChannel?.removeGroupChannelHandler) {\n        sdk.groupChannel.removeGroupChannelHandler(typingHandlerId);\n      }\n    }\n  }, [sdk?.currentUser?.userId]);\n\n  const queries_ = useMemo(() => {\n    return {\n      applicationUserListQuery: userFilledApplicationUserListQuery,\n      channelListQuery: userFilledChannelListQuery,\n    };\n  }, [\n    userFilledApplicationUserListQuery,\n    userFilledChannelListQuery,\n  ])\n\n  const { allChannels } = channelListStore;\n  const sortedChannels = (sortChannelList && typeof sortChannelList === 'function')\n    ? sortChannelList(allChannels)\n    : allChannels;\n\n  if (sortedChannels.length !== allChannels.length) {\n    const warning = `ChannelList: You have removed/added extra channels on sortChannelList\n      this could cause unexpected problems`;\n    // eslint-disable-next-line no-console\n    console.warn(warning, { before: allChannels, after: sortedChannels });\n    logger.warning(warning, { before: allChannels, after: sortedChannels });\n  }\n\n  useEffect(() => {\n    if (!sdk || !sdk.groupChannel || !currentChannel || !currentChannel?.url) {\n      return;\n    }\n    sdk.groupChannel.getChannel(currentChannel.url).then((groupChannel) => {\n      if (groupChannel) {\n        onChannelSelect(groupChannel);\n      } else {\n        onChannelSelect(null);\n      }\n    });\n  }, [currentChannel?.url]);\n\n  return (\n    <ChannelListContext.Provider value={{\n      className,\n      disableUserProfile,\n      queries: queries_,\n      onProfileEditSuccess,\n      onThemeChange,\n      onBeforeCreateChannel,\n      onChannelSelect,\n      sortChannelList,\n      loading,\n      allowProfileEdit: enableEditProfile,\n      channelListDispatcher,\n      channelSource,\n      ...channelListStore,\n      allChannels: sortedChannels,\n      typingChannels,\n      isTypingIndicatorEnabled: (isTypingIndicatorEnabled !== null) ? isTypingIndicatorEnabled : isTypingIndicatorEnabledOnChannelList,\n      isMessageReceiptStatusEnabled: (isMessageReceiptStatusEnabled !== null) ? isMessageReceiptStatusEnabled : isMessageReceiptStatusEnabledOnChannelList,\n    }}>\n      <UserProfileProvider\n        disableUserProfile={userDefinedDisableUserProfile}\n        renderUserProfile={userDefinedRenderProfile}\n      >\n        <div className={`sendbird-channel-list ${className}`}>\n          {children}\n        </div>\n      </UserProfileProvider>\n    </ChannelListContext.Provider>\n  );\n};\n\nfunction useChannelListContext(): ChannelListProviderInterface {\n  const context: ChannelListProviderInterface = useContext(ChannelListContext);\n  return context;\n}\n\nexport {\n  ChannelListProvider,\n  useChannelListContext,\n};\n"],"names":["RESET_CHANNEL_LIST","CREATE_CHANNEL","LEAVE_CHANNEL_SUCCESS","SET_CURRENT_CHANNEL","SHOW_CHANNEL_SETTINGS","HIDE_CHANNEL_SETTINGS","FETCH_CHANNELS_START","FETCH_CHANNELS_SUCCESS","FETCH_CHANNELS_FAILURE","INIT_CHANNELS_START","INIT_CHANNELS_SUCCESS","INIT_CHANNELS_FAILURE","ON_USER_JOINED","ON_CHANNEL_DELETED","ON_LAST_MESSAGE_UPDATED","ON_USER_LEFT","ON_CHANNEL_CHANGED","ON_CHANNEL_ARCHIVED","ON_CHANNEL_FROZEN","ON_CHANNEL_UNFROZEN","ON_READ_RECEIPT_UPDATED","ON_DELIVERY_RECEIPT_UPDATED","CHANNEL_REPLACED_TO_TOP","CHANNEL_LIST_PARAMS_UPDATED","DELIVERY_RECIPT","createEventHandler","sdk","sdkChannelHandlerId","channelListDispatcher","logger","ChannelHandler","GroupChannelHandler","onChannelChanged","channel","info","type","channelActions","payload","onChannelDeleted","channelUrl","onUserJoined","lastMessage","onUserBanned","user","currentUser","userId","isMe","onUserLeft","leftUser","onReadStatus","onDeliveryReceiptUpdated","onMessageUpdated","message","isEqual","onChannelHidden","onChannelFrozen","onChannelUnfrozen","groupChannel","addGroupChannelHandler","createChannelListQuery","userFilledChannelListQuery","param","includeEmpty","limit","order","Object","keys","forEach","key","channelListQuery","createMyGroupChannelListQuery","setupChannelList","setChannelSource","onChannelSelect","sortChannelList","disableAutoSelect","warning","currentUserId","hasNext","next","then","channelList","sortedChannelList","canSetMarkAsDelivered","appInfo","premiumFeatureList","find","feature","c","idx","setTimeout","markAsDelivered","catch","err","error","pubSubHandleRemover","subscriber","s","remove","pubSubHandler","pubSub","Map","set","topics","subscribe","msg","updatedChannel","messageId","url","initialized","loading","allChannels","currentChannel","showSettings","reducer","state","action","actions","_objectSpread","initialState","length","currentChannels","map","filteredChannels","filter","filterChannelListParams","getChannelsWithUpsertedChannel","ch","nextChannel","unreadMessageCount","currentUnreadCount","isFrozen","ChannelListContext","React","createContext","disableUserProfile","allowProfileEdit","onBeforeCreateChannel","onThemeChange","onProfileEditSuccess","queries","className","channelSource","typingChannels","ChannelListProvider","props","children","_b","isTypingIndicatorEnabled","_c","isMessageReceiptStatusEnabled","noop","globalStore","useSendbirdStateContext","config","stores","sdkStore","isTypingIndicatorEnabledOnChannelList","isMessageReceiptStatusEnabledOnChannelList","userDefinedDisableUserProfile","userDefinedRenderProfile","renderUserProfile","enableEditProfile","userFilledApplicationUserListQuery","applicationUserListQuery","sdkIntialized","_d","useReducer","channelListReducers","channelListInitialState","channelListStore","_e","useState","_f","setSdkChannelHandlerId","_g","typingHandlerId","setTypingHandlerId","_h","setTypingChannels","useEffect","uuidv4","_a","removeGroupChannelHandler","channelListActions","handlerId","handler","onTypingStatusUpdated","typingMemberCount","getTypingUsers","__spreadArray","onUnreadMemberStatusUpdated","onUndeliveredMemberStatusUpdated","getChannelWithoutCache","onMentionReceived","queries_","useMemo","sortedChannels","console","warn","before","after","getChannel","__assign","concat","useChannelListContext","context","useContext"],"mappings":"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"}